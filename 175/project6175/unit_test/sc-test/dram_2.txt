message router running
C create mem: load 0 words from mem.vmh
10: RefSCMem: allocate memory ptr = 00007fedecc82010
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 2aaaaa
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
cache miss, start miss


requesting addr 00000004 (core 1)
tag 000000 vs current tag 2aaaaa
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 2aaaaa -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 2aaaaa -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 2aaaaa
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 2aaaaa -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
added stored data 1190cde7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde7aaaaaaaa
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 2aaaaa
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 2aaaaa -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
upgrading state to 1 and updating tag to 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
added stored data 47c7c971
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47c7c971aaaaaaaa
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde7aaaaaaaa
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
cache hit
Store for non-M, need to sendFillReq


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde7aaaaaaaa
cache hit
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde7aaaaaaaa
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router sending m->r
router dequeued req, not resp
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
added stored data 00a65647
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00a65647
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47c7c971aaaaaaaa
cache miss, start miss
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
executing downgrade for incompatible child 0
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
downgrade deq from state 2 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
downgrade deq from state 2 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 2 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47c7c971aaaaaaaa
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47c7c971aaaaaaaa
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47c7c971aaaaaaaa
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde7aaaaaaaa
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde7aaaaaaaa
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde7aaaaaaaa
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
added stored data 0118c6c0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0118c6c0
upgrading state to 0 and updating tag to 000001


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00a65647
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77633e5e00a65647
cache hit


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0118c6c0
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77633e5e00a65647
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde7aaaaaaaa
cache miss, start miss
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
executing downgrade for incompatible child 0
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77633e5e29efa642
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77633e5e29efa642
added stored data 283290fd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77633e5e283290fd
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47c7c971aaaaaaaa
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47c7c971aaaaaaaa
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47c7c971aaaaaaaa
added stored data 20d49da3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47c7c97120d49da3
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77633e5e29efa642
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde7aaaaaaaa
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde7aaaaaaaa
added stored data 20d7b9b5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde720d7b9b5
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde720d7b9b5
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde77e9bf4c3
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0118c6c0
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0118c6c0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0118c6c0
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0118c6c0
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47c7c97120d49da3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47c7c97120d49da3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47c7c97120d49da3
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77633e5e283290fd
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77633e5e283290fd
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77633e5e283290fd
added stored data 1ad87e5a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77633e5e1ad87e5a
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77633e5e1ad87e5a
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77633e5e1ad87e5a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77633e5e1ad87e5a
added stored data 73d616df
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d616df1ad87e5a
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d616df1ad87e5a
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d616df1ad87e5a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d616df1ad87e5a
added stored data 7305e21c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7305e21c1ad87e5a
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7305e21c1ad87e5a
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0118c6c0
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0118c6c0
added stored data 7cb91075
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cb910750118c6c0
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47c7c97120d49da3
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cb910750118c6c0
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cb910750118c6c0
added stored data 4d654d08
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d654d080118c6c0
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47c7c97120d49da3
added stored data 34a32fe3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa34a32fe320d49da3
upgrading state to 0 and updating tag to 000001


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d654d080118c6c0
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d654d080118c6c0
cache miss, start miss


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa34a32fe320d49da3
cache hit
Store for M, so just write data in cache
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cb910750118c6c0
cache miss, start miss
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
starting miss for addr 00000040 core 1
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7305e21c1ad87e5a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7305e21c1ad87e5a
added stored data 32c9d156
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7305e21c32c9d156
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7305e21c32c9d156
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7305e21c32c9d156
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7305e21c32c9d156
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7305e21c32c9d156
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7305e21c32c9d156
cache hit
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7077648620d49da3
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1e608b2e20d49da3
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d654d080118c6c0
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d654d080118c6c0
added stored data 6fc59217
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fc592170118c6c0
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fc592170118c6c0
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde77e9bf4c3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde77e9bf4c3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde77e9bf4c3
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7305e21c32c9d156
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7305e21c32c9d156
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7305e21c32c9d156
added stored data 6c9b10a1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6c9b10a132c9d156
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47c7c97120d49da3
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6c9b10a132c9d156
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6c9b10a132c9d156
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6c9b10a132c9d156
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde77e9bf4c3
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1e608b2e20d49da3
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1e608b2e20d49da3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1e608b2e20d49da3
upgrading state to 1 and updating tag to 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde77e9bf4c3
added stored data 3ffc3340
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde73ffc3340
upgrading state to 0 and updating tag to 000000


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6c9b10a132c9d156
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6c9b10a132c9d156
cache hit
Store for non-M, need to sendFillReq


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6c9b10a132c9d156
cache miss, start miss
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6c9b10a132c9d156
added stored data 530ffe96
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa530ffe9632c9d156
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1e608b2e20d49da3
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa530ffe9632c9d156
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1e608b2e20d49da3
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fc592170118c6c0
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fc592170118c6c0
added stored data 47d50576
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fc5921747d50576
upgrading state to 0 and updating tag to 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1e608b2e20d49da3
added stored data 126a9f05
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa126a9f0520d49da3
upgrading state to 0 and updating tag to 000001


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fc5921747d50576
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa126a9f0520d49da3
cache miss, start miss


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde73ffc3340
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde73ffc3340
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde73ffc3340
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde73ffc3340
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa530ffe96536d9163
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde73ffc3340
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa126a9f0520d49da3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa126a9f0520d49da3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa126a9f0520d49da3
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa126a9f0520d49da3
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa126a9f0520d49da3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa126a9f0520d49da3
added stored data 5a20935b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a20935b20d49da3
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba7536d9163
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a20935b20d49da3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a20935b20d49da3
added stored data 4d71c8b4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d71c8b420d49da3
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d71c8b420d49da3
cache hit
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d71c8b420d49da3
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51f9773a47d50576
cache hit
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d71c8b420d49da3
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51f9773a47d50576
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51f9773a47d50576
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51f9773a47d50576
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51f9773a47d50576
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51f9773a47d50576
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba7536d9163
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba7536d9163
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba7536d9163
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d71c8b420d49da3
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba7536d9163
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba7536d9163
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba7536d9163
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba7536d9163
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba7536d9163
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba7536d9163
added stored data 66bd4ba6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba766bd4ba6
upgrading state to 0 and updating tag to 000000


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a20935b20d49da3
cache miss, start miss
message router running
starting miss for addr 00000000 core 0


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa240e4de020d49da3
cache miss, start miss
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde73ffc3340
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde73ffc3340
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde73ffc3340
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde73ffc3340
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde73ffc3340
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde73ffc3340
added stored data 1bd6b9db
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde71bd6b9db
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba766bd4ba6
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa240e4de020d49da3
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa240e4de020d49da3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa240e4de020d49da3
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa240e4de020d49da3
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51f9773a47d50576
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51f9773a47d50576
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51f9773a47d50576
upgrading state to 1 and updating tag to 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa240e4de020d49da3
added stored data 0dee128e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa240e4de00dee128e
upgrading state to 0 and updating tag to 000001


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde71bd6b9db
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa240e4de00dee128e
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde71bd6b9db
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde71bd6b9db
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde71bd6b9db
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde71bd6b9db
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa240e4de00dee128e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa240e4de00dee128e
added stored data 7b12d461
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa240e4de07b12d461
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa240e4de07b12d461
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa240e4de07b12d461
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa240e4de07b12d461
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa240e4de07b12d461
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa240e4de07b12d461
added stored data 50c59ece
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa50c59ece7b12d461
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa240e4de07b12d461
cache miss, start miss
message router running
starting miss for addr 00000000 core 0


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51f9773a47d50576
cache miss, start miss
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde71bd6b9db
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde71bd6b9db
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde71bd6b9db
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba7536d9163
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba766bd4ba6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba766bd4ba6
added stored data 654246bb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba7654246bb
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa50c59ece7b12d461
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba7654246bb
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba7654246bb
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba761257df3
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa03cec3807b12d461
cache hit
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa03cec3807b12d461
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba70db101c8
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba70db101c8
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51f9773a47d50576
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51f9773a47d50576
added stored data 40aa05ac
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40aa05ac47d50576
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40aa05ac47d50576
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40aa05ac47d50576
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40aa05ac47d50576
added stored data 5941e0ec
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40aa05ac5941e0ec
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40aa05ac5941e0ec
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba70db101c8
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba70db101c8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba70db101c8
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba70db101c8
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba70db101c8
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba70db101c8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba70db101c8
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba70db101c8
added stored data 072f1edd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa072f1edd0db101c8
upgrading state to 0 and updating tag to 000000


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0bf4eba70db101c8
cache miss, start miss
message router running
starting miss for addr 00000044 core 1


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa072f1edd0db101c8
cache hit
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa072f1edd0db101c8
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
executing downgrade for incompatible child 0
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 2 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa072f1edd0db101c8
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa072f1edd0db101c8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa072f1edd0db101c8
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c88848f7b12d461
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c88848f7b12d461
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40aa05ac5941e0ec
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40aa05ac5941e0ec
added stored data 1b3c2622
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40aa05ac1b3c2622
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde71bd6b9db
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde71bd6b9db
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1190cde71bd6b9db
added stored data 69a85f81
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69a85f811bd6b9db
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69a85f811bd6b9db
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c88848f7b12d461
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c88848f7b12d461
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c88848f7b12d461
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c88848f7b12d461
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c88848f7b12d461
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c88848f7b12d461
added stored data 12965f74
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c88848f12965f74
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa072f1edd0db101c8
cache hit
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c88848f12965f74
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c88848f12965f74
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c88848f12965f74
added stored data 0a5791ea
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a5791ea12965f74
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a5791ea12965f74
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a5791ea12965f74
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a5791ea12965f74
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a5791ea12965f74
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a5791ea12965f74
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69a85f811bd6b9db
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69a85f811bd6b9db
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69a85f811bd6b9db
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69a85f811bd6b9db
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69a85f811bd6b9db
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69a85f811bd6b9db
added stored data 6b93e3d4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69a85f816b93e3d4
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa072f1edd0db101c8
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a5791ea12965f74
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a5791ea12965f74
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a5791ea12965f74
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40aa05ac1b3c2622
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40aa05ac1b3c2622
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40aa05ac1b3c2622
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40aa05ac1b3c2622
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69a85f816b93e3d4
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa072f1edd0db101c8
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa072f1edd0db101c8
added stored data 64a0e709
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64a0e7090db101c8
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64a0e7090db101c8
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64a0e7093a7f72c9
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e0351e93a7f72c9
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e0351e91f083dec
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a5791ea12965f74
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a5791ea12965f74
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a5791ea12965f74
added stored data 5e8387fa
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa12965f74
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40aa05ac1b3c2622
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69a85f816b93e3d4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69a85f816b93e3d4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69a85f816b93e3d4
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69a85f816b93e3d4
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e0351e973208711
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e0351e973208711
added stored data 0f513528
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e0351e90f513528
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e0351e90f513528
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa12965f74
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa12965f74
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa12965f74
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa12965f74
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa12965f74
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40aa05ac1b3c2622
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40aa05ac1b3c2622
added stored data 19e8a901
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a9011b3c2622
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa12965f74
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69a85f816b93e3d4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69a85f816b93e3d4
added stored data 0ccdf3b9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b96b93e3d4
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b96b93e3d4
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b96b93e3d4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b96b93e3d4
added stored data 6c293279
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b96c293279
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a9011b3c2622
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b96c293279
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b96c293279
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b96c293279
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e0351e973208711
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e0351e90f513528
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e0351e90f513528
added stored data 630b5715
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa630b57150f513528
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b96c293279
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a9011b3c2622
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a9011b3c2622
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a9011b3c2622
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b96c293279
added stored data 430aff4f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b9430aff4f
upgrading state to 0 and updating tag to 000000


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a9011b3c2622
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa630b57150f513528
cache miss, start miss
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
received downgrade for child 0 from state 1 -> 2
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa630b57150f513528
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa630b57150f513528
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa630b57150f513528
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa630b57150f513528
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa630b57150f513528
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b96c293279
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a9011b3c2622
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a9011b3c2622
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a9011b3c2622
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b9430aff4f
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa12965f74
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa12965f74
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa12965f74
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa630b57150f513528
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa630b57150f513528
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa12965f74
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa12965f74
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa12965f74
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a9011b3c2622
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a9011b3c2622
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a9011b3c2622
added stored data 1db1196e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a9011db1196e
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a9011db1196e
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a9011db1196e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a9011db1196e
added stored data 75883834
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a90175883834
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa12965f74
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa630b57150f513528
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa630b57150f513528
added stored data 22d71e3f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22d71e3f0f513528
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22d71e3f0f513528
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa12965f74
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b9430aff4f
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b9430aff4f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b9430aff4f
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b9430aff4f
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b9430aff4f
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b9430aff4f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b9430aff4f
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b9430aff4f
added stored data 20707b1d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b920707b1d
upgrading state to 0 and updating tag to 000000


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b9430aff4f
cache miss, start miss
message router running
starting miss for addr 00000400 core 0


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a90175883834
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a90103a04a95
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa12965f74
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa12965f74
added stored data 15c46fb3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa15c46fb3
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa15c46fb3
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22d71e3f0f513528
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22d71e3f0f513528
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22d71e3f0f513528
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22d71e3f0f513528
cache hit
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22d71e3f0f513528
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b920707b1d
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b920707b1d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ccdf3b920707b1d
added stored data 42261c87
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42261c8720707b1d
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42261c8720707b1d
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42261c8720707b1d
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa15c46fb3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa15c46fb3
added stored data 34b5495c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa34b5495c
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa34b5495c
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa34b5495c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa34b5495c
added stored data 6efe5505
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa6efe5505
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e8387fa6efe5505
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22d71e3f0f513528
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42261c8720707b1d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42261c8720707b1d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42261c8720707b1d
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42261c8720707b1d
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a90103a04a95
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19e8a90103a04a95
added stored data 1b57e1d4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b57e1d403a04a95
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4158bd786efe5505
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4158bd786efe5505
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4158bd786efe5505
added stored data 06522719
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa065227196efe5505
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa065227196efe5505
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa065227196efe5505
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa065227196efe5505
added stored data 79c639a0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79c639a06efe5505
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79c639a06efe5505
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b57e1d403a04a95
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b57e1d41ca2d44a
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42261c8720707b1d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42261c8720707b1d
added stored data 2f3e9d88
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e9d8820707b1d
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22d71e3f0f513528
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22d71e3f0f513528
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22d71e3f0f513528
added stored data 74722fd8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22d71e3f74722fd8
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79c639a06efe5505
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22d71e3f74722fd8
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22d71e3f74722fd8
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22d71e3f74722fd8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22d71e3f74722fd8
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22d71e3f74722fd8
added stored data 607e0d59
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa607e0d5974722fd8
upgrading state to 0 and updating tag to 000000


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e9d8820707b1d
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa607e0d5974722fd8
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b57e1d41ca2d44a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b57e1d41ca2d44a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b57e1d41ca2d44a
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b57e1d41ca2d44a
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79c639a06efe5505
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79c639a06efe5505
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79c639a06efe5505
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22d71e3f74722fd8
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa607e0d5974722fd8
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa607e0d5974722fd8
added stored data 44a3e247
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa44a3e24774722fd8
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79c639a06efe5505
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b57e1d41ca2d44a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b57e1d41ca2d44a
added stored data 1df2410c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1df2410c1ca2d44a
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79c639a06efe5505
added stored data 134a8009
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a80096efe5505
upgrading state to 0 and updating tag to 000001


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79c639a06efe5505
cache miss, start miss
message router running
starting miss for addr 00000004 core 1


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a80096efe5505
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e9d8820707b1d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e9d8820707b1d
added stored data 4117d136
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e9d884117d136
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e9d884117d136
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e9d884117d136
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e9d884117d136
added stored data 06271c1c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06271c1c4117d136
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1df2410c1ca2d44a
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a80096efe5505
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a80096efe5505
added stored data 52ed6734
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa44a3e24774722fd8
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa44a3e24774722fd8
added stored data 17caf206
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17caf20674722fd8
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17caf20674722fd8
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d074722fd8
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d074722fd8
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06271c1c4117d136
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06271c1c4117d136
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06271c1c4117d136
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06271c1c4117d136
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1df2410c1ca2d44a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1df2410c1ca2d44a
added stored data 57ce4adc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa57ce4adc1ca2d44a
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa57ce4adc1ca2d44a
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa57ce4adc1ca2d44a
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa192b7b841ca2d44a
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d074722fd8
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d074722fd8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d074722fd8
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06271c1c4117d136
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06271c1c4117d136
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06271c1c4117d136
added stored data 51734e1e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e4117d136
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa44a3e24774722fd8
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e4117d136
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e4117d136
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e4117d136
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e4117d136
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d074722fd8
cache hit
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e4117d136
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa192b7b841ca2d44a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa192b7b841ca2d44a
added stored data 32511987
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa192b7b8432511987
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e4117d136
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
upgrading state to 1 and updating tag to 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e4117d136
added stored data 4481d972
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e4481d972
upgrading state to 0 and updating tag to 000000


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa192b7b8432511987
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e4481d972
cache miss, start miss
message router running
received downgrade for child 1 from state 1 -> 2
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
executing downgrade for incompatible child 0
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e4481d972
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e4481d972
added stored data 2b9cfbf0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e2b9cfbf0
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e2b9cfbf0
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e2b9cfbf0
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa192b7b8461569f94
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
added stored data 3c2a745e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a80093c2a745e
upgrading state to 0 and updating tag to 000001


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d074722fd8
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a80093c2a745e
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e2b9cfbf0
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e2b9cfbf0
added stored data 75b360fc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e75b360fc
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa192b7b8461569f94
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa192b7b8461569f94
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa192b7b8461569f94
added stored data 4868cf31
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3161569f94
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3161569f94
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3161569f94
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3161569f94
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3161569f94
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3161569f94
added stored data 55a7c8ce
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3155a7c8ce
upgrading state to 0 and updating tag to 000001


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3161569f94
cache miss, start miss
message router running
starting miss for addr 00000044 core 0


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a800952ed6734
cache miss, start miss
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d074722fd8
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d074722fd8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d074722fd8
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e75b360fc
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e75b360fc
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e75b360fc
added stored data 1f2f2714
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e1f2f2714
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3155a7c8ce
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e1f2f2714
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e1f2f2714
added stored data 2ecf276d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e2ecf276d
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e2ecf276d
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d074722fd8
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d074722fd8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d074722fd8
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d074722fd8
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a80093c2a745e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a80093c2a745e
added stored data 2f9c948c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a80092f9c948c
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d074722fd8
added stored data 0c246fec
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d00c246fec
upgrading state to 0 and updating tag to 000000


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d074722fd8
cache miss, start miss
message router running
starting miss for addr 00000044 core 0


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d00c246fec
cache miss, start miss
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d00c246fec
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fc4c5d00c246fec
added stored data 3e7c4823
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c48230c246fec
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a80092f9c948c
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa134a8009019a4aa4
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16278301019a4aa4
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3155a7c8ce
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3155a7c8ce
added stored data 742920fa
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf31742920fa
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e1f2f2714
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf31742920fa
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16278301019a4aa4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16278301019a4aa4
added stored data 2197f894
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa162783012197f894
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c48230c246fec
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c48230c246fec
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c48230c246fec
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c48230c246fec
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf31742920fa
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf31742920fa
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf31742920fa
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf31742920fa
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf31742920fa
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa162783012197f894
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa162783012197f894
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa162783012197f894
added stored data 27ee6ab1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab12197f894
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab12197f894
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab12197f894
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab12197f894
added stored data 58ee27f7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab158ee27f7
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab158ee27f7
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf31742920fa
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab112b0814b
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c48230c246fec
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf31742920fa
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf31742920fa
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf31742920fa
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
cache hit
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab112b0814b
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab112b0814b
added stored data 5125f5ce
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab15125f5ce
upgrading state to 0 and updating tag to 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e0836643d
added stored data 316e8ce9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e316e8ce9
upgrading state to 0 and updating tag to 000000


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab15125f5ce
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e316e8ce9
cache miss, start miss
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e316e8ce9
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa51734e1e316e8ce9
added stored data 1c01bf5d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c01bf5d316e8ce9
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf31742920fa
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab15125f5ce
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab15125f5ce
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab15125f5ce
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf31742920fa
added stored data 3d17918d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf313d17918d
upgrading state to 0 and updating tag to 000001


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf31742920fa
cache miss, start miss
message router running
starting miss for addr 00000444 core 1


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf313d17918d
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf312cd28678
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf312cd28678
cache hit
message router running
executing downgrade for incompatible child 0


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf312cd28678
cache hit
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c01bf5d316e8ce9
cache miss, start miss
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
executing downgrade for incompatible child 0
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf312cd28678
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf312cd28678
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf312cd28678
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab15125f5ce
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab15125f5ce
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab15125f5ce
added stored data 101a9a92
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab1101a9a92
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf312cd28678
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf312cd28678
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab1101a9a92
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab1101a9a92
added stored data 00646681
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab100646681
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf312cd28678
added stored data 6bca6c21
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf316bca6c21
upgrading state to 0 and updating tag to 000001


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf312cd28678
cache miss, start miss
message router running
starting miss for addr 00000044 core 1


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab1101a9a92
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c48230c246fec
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c48230c246fec
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c48230c246fec
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c48230c246fec
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c48230c246fec
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab100646681
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab100646681
added stored data 08ab5b3b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b00646681
upgrading state to 0 and updating tag to 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c48230c246fec
added stored data 213b3c9f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823213b3c9f
upgrading state to 0 and updating tag to 000000


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf316bca6c21
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf316bca6c21
cache miss, start miss


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27ee6ab100646681
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823213b3c9f
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823213b3c9f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823213b3c9f
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823213b3c9f
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b00646681
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b00646681
added stored data 4231380f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b4231380f
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823213b3c9f
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf316bca6c21
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf316bca6c21
added stored data 35d5cce0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3135d5cce0
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b00646681
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3135d5cce0
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3135d5cce0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3135d5cce0
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3135d5cce0
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b4231380f
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b4231380f
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b4231380f
added stored data 0770db76
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b0770db76
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b0770db76
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b0770db76
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b0770db76
added stored data 6122eba2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b6122eba2
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b6122eba2
cache hit
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3135d5cce0
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c01bf5d316e8ce9
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c01bf5d316e8ce9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c01bf5d316e8ce9
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3135d5cce0
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823213b3c9f
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823213b3c9f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823213b3c9f
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823213b3c9f
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823213b3c9f
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823213b3c9f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823213b3c9f
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823213b3c9f
added stored data 590fe9dd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823590fe9dd
upgrading state to 0 and updating tag to 000000


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823213b3c9f
cache miss, start miss
message router running
starting miss for addr 00000040 core 0


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823590fe9dd
cache miss, start miss
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823590fe9dd
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823590fe9dd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823590fe9dd
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c01bf5d316e8ce9
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c01bf5d316e8ce9
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3135d5cce0
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4868cf3135d5cce0
added stored data 4f7b0c46
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4f7b0c4635d5cce0
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b6122eba2
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b6122eba2
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b6122eba2
added stored data 06e5431f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b06e5431f
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b06e5431f
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c01bf5d316e8ce9
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c01bf5d316e8ce9
added stored data 7628703e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7628703e316e8ce9
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7628703e316e8ce9
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7628703e316e8ce9
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7628703e316e8ce9
added stored data 26d66388
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa26d66388316e8ce9
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa26d66388316e8ce9
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa26d66388316e8ce9
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa26d66388316e8ce9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa26d66388316e8ce9
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4f7b0c4635d5cce0
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa26d66388316e8ce9
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b06e5431f
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b06e5431f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b06e5431f
upgrading state to 1 and updating tag to 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa26d66388316e8ce9
added stored data 031ed6bf
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa031ed6bf316e8ce9
upgrading state to 0 and updating tag to 000000


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823590fe9dd
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4f7b0c4635d5cce0
cache miss, start miss
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
received downgrade for child 0 from state 1 -> 2
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4f7b0c4635d5cce0
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4f7b0c4635d5cce0
added stored data 43b5e017
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e01735d5cce0
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b06e5431f
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823590fe9dd
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823590fe9dd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823590fe9dd
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa031ed6bf316e8ce9
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa031ed6bf316e8ce9
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa031ed6bf316e8ce9
added stored data 3606ec49
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3606ec49316e8ce9
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3606ec49316e8ce9
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3606ec49316e8ce9
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3606ec49316e8ce9
added stored data 60c59712
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60c59712316e8ce9
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823590fe9dd
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b06e5431f
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b06e5431f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b06e5431f
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b06e5431f
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e01735d5cce0
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e01735d5cce0
added stored data 0e735d3c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e0170e735d3c
upgrading state to 0 and updating tag to 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b06e5431f
added stored data 0cc22643
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b0cc22643
upgrading state to 0 and updating tag to 000001


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60c59712316e8ce9
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b0cc22643
cache hit
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa08ab5b3b0cc22643
cache hit
Store for M, so just write data in cache
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e01735d5cce0
cache miss, start miss
message router running
executing downgrade for incompatible child 0
starting miss for addr 00000440 core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b0cc22643
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b0cc22643
added stored data 257f41ce
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b257f41ce
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b257f41ce
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e0170e735d3c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e0170e735d3c
added stored data 269ab87a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e017269ab87a
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b0cc22643
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60c59712316e8ce9
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60c59712316e8ce9
added stored data 4b97ad6a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4b97ad6a316e8ce9
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4b97ad6a316e8ce9
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4b97ad6a316e8ce9
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4b97ad6a316e8ce9
added stored data 10e81c0e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10e81c0e316e8ce9
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10e81c0e316e8ce9
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e017269ab87a
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e017269ab87a
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10e81c0e316e8ce9
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e017269ab87a
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e0176d065dda
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f22568316e8ce9
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b257f41ce
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b257f41ce
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b257f41ce
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b257f41ce
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b257f41ce
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b257f41ce
added stored data 4499dc42
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b4499dc42
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b4499dc42
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b4499dc42
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b4499dc42
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f22568316e8ce9
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f22568316e8ce9
added stored data 5e888e25
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f225685e888e25
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e0170e735d3c
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f225685e888e25
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f225685e888e25
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f225685e888e25
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e01711cc9ba5
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e01711cc9ba5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e01711cc9ba5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e01711cc9ba5
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e01711cc9ba5
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823590fe9dd
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823590fe9dd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823590fe9dd
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43b5e01711cc9ba5
added stored data 7cfb0c93
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c9311cc9ba5
upgrading state to 0 and updating tag to 000001


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f225685e888e25
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c9311cc9ba5
cache miss, start miss
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
received downgrade for child 0 from state 1 -> 2
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b4499dc42
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b4499dc42
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b4499dc42
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b4499dc42
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b4499dc42
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823590fe9dd
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823590fe9dd
added stored data 20d6c193
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c482320d6c193
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a7b108b4499dc42
added stored data 0d949bca
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca4499dc42
upgrading state to 0 and updating tag to 000001


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c482320d6c193
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca4499dc42
cache miss, start miss


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f225685e888e25
cache hit
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f225685e888e25
cache hit
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17c72eb520d6c193
cache miss, start miss
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
executing downgrade for incompatible child 1
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f225685e888e25
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f225685e888e25
added stored data 6b5eae6b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f225686b5eae6b
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f225686b5eae6b
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c9311cc9ba5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c9311cc9ba5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c9311cc9ba5
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c9311cc9ba5
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca4499dc42
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca4499dc42
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca4499dc42
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca4499dc42
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17c72eb520d6c193
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17c72eb520d6c193
added stored data 2cf05ce9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17c72eb52cf05ce9
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f225685e888e25
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f225686b5eae6b
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f225686b5eae6b
added stored data 76378315
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f2256876378315
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e7c4823590fe9dd
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca4499dc42
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca4499dc42
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca4499dc42
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca4499dc42
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17c72eb52cf05ce9
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17c72eb52cf05ce9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17c72eb52cf05ce9
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17c72eb52cf05ce9
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f2256876378315
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f2256876378315
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01f2256876378315
added stored data 1ce07df5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ce07df576378315
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ce07df576378315
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ce07df576378315
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ce07df576378315
added stored data 4c58b426
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ce07df54c58b426
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ce07df54c58b426
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ce07df54c58b426
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ce07df54c58b426
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ce07df54c58b426
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ce07df54c58b426
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17c72eb52cf05ce9
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca4499dc42
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca4499dc42
added stored data 6fa4b8e9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca6fa4b8e9
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17c72eb52cf05ce9
added stored data 7601012c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17c72eb57601012c
upgrading state to 0 and updating tag to 000000


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17c72eb52cf05ce9
cache miss, start miss
message router running
starting miss for addr 00000440 core 0


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ce07df54c58b426
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c9311cc9ba5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c9311cc9ba5
added stored data 709298b8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c93709298b8
upgrading state to 0 and updating tag to 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ce07df54c58b426
added stored data 23b9d314
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa23b9d3144c58b426
upgrading state to 0 and updating tag to 000000


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca6fa4b8e9
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17c72eb57601012c
cache hit
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa23b9d3144c58b426
cache hit
Store for M, so just write data in cache
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e74c58b426
cache miss, start miss
message router running
executing downgrade for incompatible child 1
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 2 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e74c58b426
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e74c58b426
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e74c58b426
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e74c58b426
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e74c58b426
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca6fa4b8e9
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca6fa4b8e9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca6fa4b8e9
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17c72eb57601012c
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f7601012c
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca6fa4b8e9
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca6fa4b8e9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca6fa4b8e9
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c93709298b8
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c93709298b8
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c93709298b8
added stored data 7db2ac72
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c937db2ac72
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c937db2ac72
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c937db2ac72
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c937db2ac72
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c937db2ac72
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca6fa4b8e9
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f7601012c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f7601012c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f7601012c
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f7601012c
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca6fa4b8e9
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e74c58b426
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e74c58b426
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e74c58b426
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca6fa4b8e9
added stored data 755e9ed8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca755e9ed8
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e74c58b426
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f7601012c
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router sending m->r
router dequeued req, not resp
received downgrade for child 1 from state 1 -> 2
message router running
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e74c58b426
added stored data 32968164
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e732968164
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e732968164
cache miss, start miss
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
executing downgrade for incompatible child 0
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c937db2ac72
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c937db2ac72
added stored data 002417dd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa002417dd7db2ac72
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa002417dd7db2ac72
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa002417dd53ebe7bd
cache hit
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca755e9ed8
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca755e9ed8
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca755e9ed8
added stored data 5535cb8b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca5535cb8b
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca5535cb8b
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e732968164
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e732968164
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e732968164
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e732968164
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e732968164
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa711182e732968164
added stored data 5d685618
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d68561832968164
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cfb0c937db2ac72
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d68561832968164
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d68561832968164
added stored data 5e2196b2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d6856185e2196b2
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa002417dd53ebe7bd
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa002417dd53ebe7bd
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa002417dd53ebe7bd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa002417dd53ebe7bd
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa002417dd53ebe7bd
added stored data 2c05394c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa002417dd2c05394c
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d68561832968164
cache miss, start miss
message router running
starting miss for addr 00000000 core 0


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa002417dd2c05394c
cache miss, start miss
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d6856185e2196b2
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d6856185e2196b2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d6856185e2196b2
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa002417dd53ebe7bd
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f7601012c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f7601012c
added stored data 3af58079
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f3af58079
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f3af58079
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa002417dd2c05394c
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa002417dd2c05394c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa002417dd2c05394c
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa002417dd2c05394c
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa002417dd2c05394c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa002417dd2c05394c
added stored data 015b94c2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b94c22c05394c
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b94c22c05394c
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b94c22c05394c
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f3af58079
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f3af58079
added stored data 3ee92937
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f3ee92937
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d6856185e2196b2
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d6856185e2196b2
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f3ee92937
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f3ee92937
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f3ee92937
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d6856185e2196b2
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca5535cb8b
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca5535cb8b
added stored data 3d762215
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca3d762215
upgrading state to 0 and updating tag to 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d6856185e2196b2
added stored data 4475954e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
upgrading state to 0 and updating tag to 000000


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f3ee92937
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f3ee92937
cache miss, start miss


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f3ee92937
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
received downgrade for child 1 from state 1 -> 2
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b94c22c05394c
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b94c22c05394c
added stored data 1ed5467c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b94c21ed5467c
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca3d762215
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b94c21ed5467c
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b94c21ed5467c
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b94c21ed5467c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b94c21ed5467c
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b94c21ed5467c
added stored data 00c83ba8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00c83ba81ed5467c
upgrading state to 0 and updating tag to 000001


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b94c21ed5467c
cache miss, start miss
message router running
starting miss for addr 00000044 core 1


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00c83ba81ed5467c
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00c83ba830d4b48d
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f3ee92937
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f3ee92937
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f3ee92937
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f3ee92937
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f3ee92937
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f3ee92937
added stored data 2adbec27
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f2adbec27
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca3d762215
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f2adbec27
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f2adbec27
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f2adbec27
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca3d762215
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca3d762215
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca3d762215
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f2adbec27
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca3d762215
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca3d762215
added stored data 4cfc0cf7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca4cfc0cf7
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca4cfc0cf7
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00c83ba830d4b48d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00c83ba830d4b48d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00c83ba830d4b48d
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca3d762215
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f2adbec27
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00c83ba830d4b48d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00c83ba830d4b48d
added stored data 2eb11421
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2eb1142130d4b48d
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca4cfc0cf7
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca4cfc0cf7
added stored data 56aa93bb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca56aa93bb
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca56aa93bb
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca56aa93bb
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca56aa93bb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca56aa93bb
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca56aa93bb
added stored data 42ebf442
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42ebf44256aa93bb
upgrading state to 0 and updating tag to 000001


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2eb1142130d4b48d
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2eb114214ddaab46
cache hit
Store for M, so just write data in cache


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42ebf44256aa93bb
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d949bca56aa93bb
cache miss, start miss


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42ebf44256aa93bb
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42ebf44256aa93bb
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42ebf44256aa93bb
added stored data 2a8a5855
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2a8a585556aa93bb
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2a8a585556aa93bb
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4475954e5e2196b2
added stored data 144e1bd2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa144e1bd25e2196b2
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa144e1bd25e2196b2
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa144e1bd25e2196b2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa144e1bd25e2196b2
added stored data 52cb955c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa52cb955c5e2196b2
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa52cb955c5e2196b2
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa52cb955c5e2196b2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa52cb955c5e2196b2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa52cb955c5e2196b2
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa52cb955c5e2196b2
added stored data 646ebf48
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa646ebf485e2196b2
upgrading state to 0 and updating tag to 000000


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa52cb955c5e2196b2
cache miss, start miss
message router running
starting miss for addr 00000000 core 1


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa646ebf485e2196b2
cache hit
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a77a56d4ddaab46
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
executing downgrade for incompatible child 0
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa646ebf485e2196b2
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa646ebf485e2196b2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa646ebf485e2196b2
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00c83ba830d4b48d
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f2adbec27
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f2adbec27
added stored data 34a230cb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f34a230cb
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f34a230cb
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa646ebf485e2196b2
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f08af5d71
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa646ebf485e2196b2
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a77a56d4ddaab46
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a77a56d4ddaab46
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a77a56d4ddaab46
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a77a56d4ddaab46
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2a8a585556aa93bb
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2a8a585556aa93bb
added stored data 4ce712f6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ce712f656aa93bb
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f4b0c54f1
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f4b0c54f1
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f4b0c54f1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f4b0c54f1
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f4b0c54f1
added stored data 1dd956b5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1dd956b54b0c54f1
upgrading state to 0 and updating tag to 000000


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa646ebf485e2196b2
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1dd956b54b0c54f1
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ce712f656aa93bb
cache miss, start miss
message router running
received downgrade for child 1 from state 1 -> 2
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
executing downgrade for incompatible child 0
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 2 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ce712f656aa93bb
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ce712f656aa93bb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ce712f656aa93bb
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ce712f656aa93bb
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa646ebf485e2196b2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa646ebf485e2196b2
added stored data 0ebfd518
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa646ebf480ebfd518
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1dd956b56fb29d9e
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa646ebf480ebfd518
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa646ebf480ebfd518
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa646ebf480ebfd518
added stored data 76261b0c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1dd956b56fb29d9e
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ce712f656aa93bb
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ce712f656aa93bb
added stored data 35994f90
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35994f9056aa93bb
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60b2786f4b0c54f1
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35994f9056aa93bb
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35994f9056aa93bb
added stored data 28dcde46
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28dcde4656aa93bb
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28dcde4656aa93bb
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a77a56d4ddaab46
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a77a56d4ddaab46
added stored data 45997428
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa459974284ddaab46
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35994f9056aa93bb
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa459974284ddaab46
cache hit
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28dcde4656aa93bb
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28dcde4656aa93bb
added stored data 518c6995
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28dcde46518c6995
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28dcde46518c6995
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28dcde46518c6995
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28dcde46518c6995
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28dcde46518c6995
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28dcde46518c6995
added stored data 79f3ca93
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28dcde4679f3ca93
upgrading state to 0 and updating tag to 000001


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28dcde46518c6995
cache miss, start miss
message router running
starting miss for addr 00000404 core 1


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6906c30d6fb29d9e
cache hit
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28dcde4679f3ca93
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
executing downgrade for incompatible child 0
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28dcde4679f3ca93
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28dcde4679f3ca93
added stored data 553b6629
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa553b662979f3ca93
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa553b662979f3ca93
cache hit
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa553b662979f3ca93
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6906c30d6fb29d9e
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c0ebfd518
added stored data 78761478
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c78761478
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c78761478
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa459974284ddaab46
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45997428052a8479
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa553b662979f3ca93
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa553b662979f3ca93
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa553b662979f3ca93
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d0adde06fb29d9e
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d0adde06fb29d9e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d0adde06fb29d9e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d0adde06fb29d9e
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c55cb2293
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45997428052a8479
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45997428052a8479
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45997428052a8479
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45997428052a8479
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa553b662979f3ca93
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa553b662979f3ca93
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa553b662979f3ca93
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d0adde06fb29d9e
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d0adde06fb29d9e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d0adde06fb29d9e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d0adde06fb29d9e
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d0adde06fb29d9e
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45997428052a8479
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45997428052a8479
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45997428052a8479
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa553b662979f3ca93
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45997428052a8479
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45997428052a8479
added stored data 0cf0d785
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0cf0d785052a8479
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa553b662979f3ca93
added stored data 371c79ad
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa553b6629371c79ad
upgrading state to 0 and updating tag to 000001


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa553b662979f3ca93
cache miss, start miss
message router running
starting miss for addr 00000404 core 0


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa553b6629371c79ad
cache hit
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa553b6629371c79ad
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
executing downgrade for incompatible child 1
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa553b6629371c79ad
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa553b6629371c79ad
added stored data 785e00ef
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef371c79ad
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef371c79ad
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0cf0d785052a8479
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0cf0d785052a8479
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c55cb2293
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c55cb2293
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c55cb2293
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c55cb2293
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d0adde06fb29d9e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d0adde06fb29d9e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d0adde06fb29d9e
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76261b0c55cb2293
added stored data 0302ce96
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce9655cb2293
upgrading state to 0 and updating tag to 000000


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d0adde06fb29d9e
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce9655cb2293
cache miss, start miss
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
received downgrade for child 0 from state 1 -> 2
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0cf0d785052a8479
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0cf0d785052a8479
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0cf0d785052a8479
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0cf0d785052a8479
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef772ba7bb
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef772ba7bb
added stored data 7d1d8d6a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef7d1d8d6a
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45997428052a8479
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d0adde06fb29d9e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0d0adde06fb29d9e
added stored data 62d01758
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa62d017586fb29d9e
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef772ba7bb
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0cf0d785052a8479
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0cf0d785052a8479
added stored data 6f4354da
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da052a8479
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef7d1d8d6a
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef7d1d8d6a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef7d1d8d6a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef7d1d8d6a
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef7d1d8d6a
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa62d017586fb29d9e
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a61c7256fb29d9e
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a61c7256c9f89a6
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef7d1d8d6a
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef7d1d8d6a
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce9655cb2293
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce9655cb2293
added stored data 44bd7609
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce9644bd7609
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef7d1d8d6a
added stored data 4c887f08
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef4c887f08
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce9644bd7609
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a61c7256c9f89a6
cache hit


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce9644bd7609
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef4c887f08
cache hit
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a61c7256c9f89a6
cache hit
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef4c887f08
cache hit
message router running
executing downgrade for incompatible child 0


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a61c7256c9f89a6
cache hit
Store for M, so just write data in cache
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef4c887f08
cache miss, start miss
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
executing downgrade for incompatible child 0
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef4c887f08
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef4c887f08
added stored data 12b61d9e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef12b61d9e
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef12b61d9e
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce9644bd7609
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce9644bd7609
added stored data 05d32be4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce9605d32be4
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce9605d32be4
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce9605d32be4
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce9605d32be4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce9605d32be4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce9605d32be4
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce9605d32be4
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef12b61d9e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa785e00ef12b61d9e
added stored data 20dcaabc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa20dcaabc12b61d9e
upgrading state to 0 and updating tag to 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce9605d32be4
added stored data 1e376ec7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce961e376ec7
upgrading state to 0 and updating tag to 000000


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa20dcaabc12b61d9e
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1926c9f89a6
cache hit


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da052a8479
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1926c9f89a6
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da052a8479
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da052a8479
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da052a8479
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa381d2f0112b61d9e
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1926c9f89a6
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1926c9f89a6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1926c9f89a6
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1926c9f89a6
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce961e376ec7
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce961e376ec7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce961e376ec7
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da052a8479
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce961e376ec7
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da052a8479
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da052a8479
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da052a8479
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce961e376ec7
added stored data 0a954aa5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a954aa51e376ec7
upgrading state to 0 and updating tag to 000000


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0302ce961e376ec7
cache miss, start miss
message router running
starting miss for addr 00000404 core 1


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a954aa51e376ec7
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa381d2f0112b61d9e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa381d2f0112b61d9e
added stored data 496a1c70
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa496a1c7012b61d9e
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da052a8479
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da052a8479
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa496a1c7012b61d9e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa496a1c7012b61d9e
added stored data 20f2f690
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa20f2f69012b61d9e
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da052a8479
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1926c9f89a6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1926c9f89a6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1926c9f89a6
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da052a8479
added stored data 31037a01
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da31037a01
upgrading state to 0 and updating tag to 000001


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1926c9f89a6
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1926c9f89a6
cache miss, start miss


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da31037a01
cache hit
Store for M, so just write data in cache
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa20f2f69012b61d9e
cache miss, start miss
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
received downgrade for child 0 from state 1 -> 2
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da6974f0e1
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da6974f0e1
added stored data 460053e2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da460053e2
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa496a1c7012b61d9e
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a954aa51e376ec7
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a954aa51e376ec7
added stored data 59e3d94b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59e3d94b1e376ec7
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59e3d94b1e376ec7
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa20f2f69012b61d9e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa20f2f69012b61d9e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa20f2f69012b61d9e
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da460053e2
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa20f2f69012b61d9e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa20f2f69012b61d9e
added stored data 5c9ad476
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c9ad47612b61d9e
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da6974f0e1
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1926c9f89a6
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1926c9f89a6
added stored data 07eae57c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe19207eae57c
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe19207eae57c
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe19207eae57c
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe19207eae57c
added stored data 5ce61f9e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1925ce61f9e
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1925ce61f9e
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1925ce61f9e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1925ce61f9e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1925ce61f9e
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1925ce61f9e
added stored data 5c7d6dfa
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c7d6dfa5ce61f9e
upgrading state to 0 and updating tag to 000000


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa20f2f69012b61d9e
cache miss, start miss
message router running
starting miss for addr 00000400 core 0


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c9ad47612b61d9e
cache miss, start miss
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c9ad47612b61d9e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c9ad47612b61d9e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c9ad47612b61d9e
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa760fe1925ce61f9e
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59e3d94b1e376ec7
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59e3d94b1e376ec7
added stored data 0b0e8b4e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59e3d94b0b0e8b4e
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c7d6dfa5ce61f9e
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da460053e2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da460053e2
added stored data 6e4636d2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da6e4636d2
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da6e4636d2
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da6e4636d2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da6e4636d2
added stored data 369b0724
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da369b0724
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59e3d94b0b0e8b4e
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da369b0724
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da369b0724
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f4354da369b0724
added stored data 3fd35109
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3fd35109369b0724
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3fd35109369b0724
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3fd35109369b0724
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3fd35109369b0724
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3fd35109369b0724
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3fd35109369b0724
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c7d6dfa5ce61f9e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c7d6dfa5ce61f9e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c7d6dfa5ce61f9e
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c7d6dfa5ce61f9e
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c7d6dfa5ce61f9e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c7d6dfa5ce61f9e
added stored data 10045f57
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c7d6dfa10045f57
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c7d6dfa10045f57
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3fd35109369b0724
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3fd35109369b0724
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3fd35109369b0724
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c9ad47612b61d9e
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3fd35109369b0724
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3fd35109369b0724
added stored data 19a46468
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3fd3510919a46468
upgrading state to 0 and updating tag to 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c9ad47612b61d9e
added stored data 29eff558
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29eff55812b61d9e
upgrading state to 0 and updating tag to 000001


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59e3d94b0b0e8b4e
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29eff55812b61d9e
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59e3d94b0b0e8b4e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59e3d94b0b0e8b4e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59e3d94b0b0e8b4e
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3fd35109369b0724
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29eff55812b61d9e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29eff55812b61d9e
added stored data 54e33287
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa54e3328712b61d9e
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa54e3328712b61d9e
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3fd3510919a46468
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3fd3510919a46468
added stored data 19208774
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1920877419a46468
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59e3d94b0b0e8b4e
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59e3d94b0b0e8b4e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59e3d94b0b0e8b4e
added stored data 2adf0a04
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a040b0e8b4e
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3fd3510919a46468
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a040b0e8b4e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a040b0e8b4e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a040b0e8b4e
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a040b0e8b4e
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a040b0e8b4e
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1920877419a46468
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1920877419a46468
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1920877419a46468
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1920877419a46468
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a040b0e8b4e
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1920877419a46468
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c7d6dfa10045f57
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c7d6dfa10045f57
added stored data 68dbf5a2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68dbf5a210045f57
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1920877419a46468
added stored data 794f8d0d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19208774794f8d0d
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a040b0e8b4e
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19208774794f8d0d
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a040b0e8b4e
cache hit
message router running
executing downgrade for incompatible child 1


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1920877433ceb1d6
cache hit
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a040b0e8b4e
cache hit
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a040b0e8b4e
added stored data 1e510136
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a041e510136
upgrading state to 0 and updating tag to 000000


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1920877433ceb1d6
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68dbf5a210045f57
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1920877433ceb1d6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1920877433ceb1d6
added stored data 38e09ae5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae533ceb1d6
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a041e510136
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68dbf5a210045f57
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68dbf5a210045f57
added stored data 2f3e0548
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e054810045f57
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e054810045f57
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa54e3328712b61d9e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa54e3328712b61d9e
added stored data 0156a923
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92312b61d9e
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae533ceb1d6
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae533ceb1d6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae533ceb1d6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae533ceb1d6
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a040b0e8b4e
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e054810045f57
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e054810045f57
added stored data 0c54885d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05480c54885d
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05480c54885d
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a041e510136
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a041e510136
added stored data 6d0732e7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a046d0732e7
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a046d0732e7
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae533ceb1d6
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae533ceb1d6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae533ceb1d6
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae533ceb1d6
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92312b61d9e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92312b61d9e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92312b61d9e
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92312b61d9e
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05480c54885d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05480c54885d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05480c54885d
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92312b61d9e
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a046d0732e7
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a046d0732e7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a046d0732e7
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a046d0732e7
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a046d0732e7
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a046d0732e7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a046d0732e7
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a046d0732e7
added stored data 10d484cf
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10d484cf6d0732e7
upgrading state to 0 and updating tag to 000000


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2adf0a046d0732e7
cache miss, start miss
message router running
starting miss for addr 00000004 core 0


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10d484cf6d0732e7
cache miss, start miss
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10d484cf6d0732e7
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10d484cf6d0732e7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10d484cf6d0732e7
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05480c54885d
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92312b61d9e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92312b61d9e
added stored data 14c3d14c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92314c3d14c
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae533ceb1d6
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92314c3d14c
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae533ceb1d6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae533ceb1d6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae533ceb1d6
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae533ceb1d6
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10d484cf6d0732e7
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10d484cf6d0732e7
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10d484cf6d0732e7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10d484cf6d0732e7
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10d484cf6d0732e7
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92314c3d14c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92314c3d14c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92314c3d14c
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae533ceb1d6
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92314c3d14c
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92314c3d14c
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92314c3d14c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92314c3d14c
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92314c3d14c
added stored data 46456478
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4645647814c3d14c
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0156a92314c3d14c
cache miss, start miss
message router running
starting miss for addr 00000000 core 1


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4645647814c3d14c
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10d484cf6d0732e7
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10d484cf6d0732e7
added stored data 3c61d3a7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c61d3a76d0732e7
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae533ceb1d6
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c61d3a76d0732e7
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c61d3a76d0732e7
added stored data 70b74702
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c61d3a770b74702
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae533ceb1d6
added stored data 1e5856fb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae51e5856fb
upgrading state to 0 and updating tag to 000001


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae533ceb1d6
cache miss, start miss
message router running
starting miss for addr 00000444 core 1


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c61d3a76d0732e7
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae51e5856fb
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae51e5856fb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae51e5856fb
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae51e5856fb
cache hit
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c61d3a770b74702
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c61d3a770b74702
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c61d3a770b74702
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c61d3a770b74702
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae51e5856fb
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4645647814c3d14c
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4645647814c3d14c
added stored data 46569b5d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d14c3d14c
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae51e5856fb
added stored data 73d11933
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d119331e5856fb
upgrading state to 0 and updating tag to 000001


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e09ae51e5856fb
cache miss, start miss
message router running
starting miss for addr 00000440 core 1


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d119331e5856fb
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d11933538f5b06
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c61d3a770b74702
cache hit
message router running
executing downgrade for incompatible child 0


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d11933538f5b06
cache hit
Store for M, so just write data in cache
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d11933659c6eb8
cache hit
Store for M, so just write data in cache
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d119330926dcfc
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d119330926dcfc
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d119330926dcfc
added stored data 2a1d7b15
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d119332a1d7b15
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d119332a1d7b15
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05480c54885d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05480c54885d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05480c54885d
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c61d3a770b74702
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05480c54885d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05480c54885d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05480c54885d
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05480c54885d
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d14c3d14c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d14c3d14c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d14c3d14c
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05480c54885d
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d119332a1d7b15
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d119332a1d7b15
added stored data 7a5a401c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5a401c2a1d7b15
upgrading state to 0 and updating tag to 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05480c54885d
added stored data 26134310
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e054826134310
upgrading state to 0 and updating tag to 000000


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d14c3d14c
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d14c3d14c
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c61d3a770b74702
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c61d3a770b74702
added stored data 7a5f5c81
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c8170b74702
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c8170b74702
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c8170b74702
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c8170b74702
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c8170b74702
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c8170b74702
added stored data 0c8fd1de
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c810c8fd1de
upgrading state to 0 and updating tag to 000000


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c8170b74702
cache miss, start miss
message router running
starting miss for addr 00000000 core 1


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e054826134310
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5a401c2a1d7b15
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5a401c2a1d7b15
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5a401c2a1d7b15
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5a401c2a1d7b15
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c810c8fd1de
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c810c8fd1de
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c810c8fd1de
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5a401c2a1d7b15
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e054826134310
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e054826134310
added stored data 4746e455
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05484746e455
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5a401c2a1d7b15
added stored data 01863289
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa018632892a1d7b15
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c810c8fd1de
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa018632892a1d7b15
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
executing downgrade for incompatible child 1
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c810c8fd1de
added stored data 224af063
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c81224af063
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05484746e455
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c81224af063
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05484746e455
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05484746e455
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05484746e455
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05484746e455
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d14c3d14c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d14c3d14c
added stored data 75354ce8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d75354ce8
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d75354ce8
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05484746e455
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa018632892a1d7b15
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa018632892a1d7b15
added stored data 289f24a5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a52a1d7b15
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c810c8fd1de
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a52a1d7b15
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a52a1d7b15
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a52a1d7b15
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a52a1d7b15
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d75354ce8
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d75354ce8
added stored data 41960955
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a52a1d7b15
added stored data 5f0a978a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
upgrading state to 0 and updating tag to 000001


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05484746e455
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f3e05484746e455
added stored data 6e8f7c9b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e8f7c9b4746e455
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e8f7c9b4746e455
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e8f7c9b4746e455
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c81224af063
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c81224af063
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c81224af063
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c81224af063
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
upgrading state to 1 and updating tag to 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5f5c81224af063
added stored data 31395ea1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31395ea1224af063
upgrading state to 0 and updating tag to 000000


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d75354ce8
cache miss, start miss
message router running
starting miss for addr 00000000 core 0


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31395ea1224af063
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a52a1d7b15
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
executing downgrade for incompatible child 1
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a224af063
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a224af063
added stored data 00dc1a2a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a00dc1a2a
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a00dc1a2a
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e8f7c9b4746e455
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e8f7c9b4746e455
added stored data 63e18650
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e8f7c9b63e18650
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a224af063
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e8f7c9b63e18650
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e8f7c9b63e18650
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e8f7c9b63e18650
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e8f7c9b63e18650
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a00dc1a2a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a00dc1a2a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a00dc1a2a
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e8f7c9b63e18650
added stored data 6fae0d8d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fae0d8d63e18650
upgrading state to 0 and updating tag to 000000


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a00dc1a2a
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
cache miss, start miss
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
received downgrade for child 0 from state 1 -> 2
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a00dc1a2a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a00dc1a2a
added stored data 019b5ad4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a019b5ad4
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fae0d8d63e18650
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a019b5ad4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a019b5ad4
added stored data 6a5f43a3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a6a5f43a3
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e8f7c9b63e18650
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a019b5ad4
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a6a5f43a3
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a6a5f43a3
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a6a5f43a3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a6a5f43a3
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
added stored data 341c3a1a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a5f0a978a
upgrading state to 0 and updating tag to 000001


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a6a5f43a3
cache miss, start miss
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
received downgrade for child 0 from state 1 -> 2
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a6a5f43a3
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a6a5f43a3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a6a5f43a3
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa289f24a55f0a978a
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a5f0a978a
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fae0d8d63e18650
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fae0d8d63e18650
added stored data 52b0fc09
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fae0d8d52b0fc09
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fae0d8d52b0fc09
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fae0d8d52b0fc09
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fae0d8d52b0fc09
added stored data 531410ed
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa531410ed52b0fc09
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa531410ed52b0fc09
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a5f0a978a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a5f0a978a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a5f0a978a
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a6a5f43a3
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a5f0a978a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a5f0a978a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a5f0a978a
upgrading state to 1 and updating tag to 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a6a5f43a3
added stored data 66450374
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a66450374
upgrading state to 0 and updating tag to 000000


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a66450374
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a5f0a978a
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a66450374
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a66450374
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a66450374
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a5f0a978a
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a5f0a978a
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa531410ed52b0fc09
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa531410ed52b0fc09
added stored data 0203600d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d52b0fc09
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a5f0a978a
added stored data 62766c6e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a62766c6e
upgrading state to 0 and updating tag to 000001


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a62766c6e
cache hit
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a62766c6e
cache miss, start miss
message router running
received downgrade for child 0 from state 1 -> 2
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a66450374
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a66450374
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a66450374
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d52b0fc09
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d52b0fc09
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d52b0fc09
added stored data 06bc4bb6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d06bc4bb6
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d06bc4bb6
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d06bc4bb6
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d06bc4bb6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d06bc4bb6
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d06bc4bb6
added stored data 68c4b48f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d68c4b48f
upgrading state to 0 and updating tag to 000000


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d06bc4bb6
cache miss, start miss
message router running
starting miss for addr 00000444 core 0


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a66450374
cache miss, start miss
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a62766c6e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a62766c6e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a62766c6e
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a62766c6e
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d41960955
added stored data 5aeaea53
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d5aeaea53
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d5aeaea53
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d68c4b48f
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d68c4b48f
added stored data 4d7fbde3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d4d7fbde3
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a66450374
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a66450374
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31da9d1a66450374
added stored data 17635afc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc66450374
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d68c4b48f
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d5aeaea53
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d5aeaea53
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d5aeaea53
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d5aeaea53
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d4d7fbde3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d4d7fbde3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d4d7fbde3
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d4d7fbde3
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc66450374
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc66450374
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc66450374
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d4d7fbde3
added stored data 7220dd54
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7220dd544d7fbde3
upgrading state to 0 and updating tag to 000000


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0203600d4d7fbde3
cache miss, start miss
message router running
starting miss for addr 00000040 core 0


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7220dd544d7fbde3
cache hit
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7220dd544d7fbde3
cache hit
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7220dd544d7fbde3
cache hit
Store for M, so just write data in cache
message router running
executing downgrade for incompatible child 1


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d25d5e4d7fbde3
cache hit
Store for M, so just write data in cache
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc66450374
cache hit
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc66450374
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d25d5e3219cd13
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d25d5e3219cd13
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d25d5e3219cd13
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc66450374
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d5aeaea53
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d5aeaea53
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d5aeaea53
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d5aeaea53
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d5aeaea53
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d5aeaea53
added stored data 35b21ed2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d35b21ed2
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d35b21ed2
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d35b21ed2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46569b5d35b21ed2
added stored data 2c961667
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2c96166735b21ed2
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d25d5e3219cd13
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2c96166735b21ed2
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2c96166735b21ed2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2c96166735b21ed2
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d25d5e3219cd13
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a62766c6e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa341c3a1a62766c6e
added stored data 39c98caf
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2c96166735b21ed2
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d25d5e3219cd13
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d25d5e3219cd13
added stored data 1e381cc5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d25d5e1e381cc5
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa73d25d5e1e381cc5
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2c96166735b21ed2
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa695db47a1e381cc5
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc66450374
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc66450374
added stored data 795a8cbe
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc795a8cbe
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa695db47a1e381cc5
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa695db47a1e381cc5
added stored data 27d48cb6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb61e381cc5
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc795a8cbe
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb61e381cc5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb61e381cc5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb61e381cc5
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb61e381cc5
cache hit
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2c96166735b21ed2
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2c96166735b21ed2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2c96166735b21ed2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2c96166735b21ed2
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2c96166735b21ed2
added stored data 1f4682af
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f4682af35b21ed2
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2c96166735b21ed2
cache miss, start miss
message router running
starting miss for addr 00000000 core 0


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f4682af35b21ed2
cache hit
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb61e381cc5
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc795a8cbe
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc795a8cbe
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc795a8cbe
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc795a8cbe
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f4682af35b21ed2
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f4682af35b21ed2
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f4682af35b21ed2
added stored data 1e7b6f20
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1e7b6f2035b21ed2
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1e7b6f2035b21ed2
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb61e381cc5
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc795a8cbe
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc795a8cbe
added stored data 1c39664b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc1c39664b
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc1c39664b
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1e7b6f2035b21ed2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1e7b6f2035b21ed2
added stored data 40e4fbce
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40e4fbce35b21ed2
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
added stored data 3b399469
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b39946962766c6e
upgrading state to 0 and updating tag to 000001


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40e4fbce35b21ed2
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b39946962766c6e
cache miss, start miss


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c78c53935b21ed2
cache hit
Store for M, so just write data in cache
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c78c53910c0c3fa
cache hit
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39c98caf62766c6e
cache miss, start miss
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
starting miss for addr 00000044 core 1
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb61e381cc5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb61e381cc5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb61e381cc5
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1e7b6f2035b21ed2
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb61e381cc5
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb61e381cc5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb61e381cc5
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb61e381cc5
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb61e381cc5
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c78c53910c0c3fa
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c78c53910c0c3fa
added stored data 11819395
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1181939510c0c3fa
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1181939510c0c3fa
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb61e381cc5
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b39946962766c6e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b39946962766c6e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b39946962766c6e
upgrading state to 1 and updating tag to 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb61e381cc5
added stored data 17ee3518
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb617ee3518
upgrading state to 0 and updating tag to 000000


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b39946962766c6e
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1181939510c0c3fa
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc1c39664b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc1c39664b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc1c39664b
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb617ee3518
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb617ee3518
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa27d48cb617ee3518
added stored data 5399125a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5399125a17ee3518
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c78c53910c0c3fa
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b39946962766c6e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b39946962766c6e
added stored data 79d80437
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79d8043762766c6e
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79d8043762766c6e
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1181939510c0c3fa
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1181939510c0c3fa
added stored data 01a96d58
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1181939501a96d58
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1181939501a96d58
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5399125a17ee3518
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5399125a17ee3518
added stored data 4290bf7e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4290bf7e17ee3518
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4290bf7e17ee3518
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc1c39664b
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc1c39664b
added stored data 7c9d643f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7c9d643f1c39664b
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5399125a17ee3518
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79d8043762766c6e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79d8043762766c6e
added stored data 2cb151b4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79d804372cb151b4
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17635afc1c39664b
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4290bf7e17ee3518
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4290bf7e17ee3518
added stored data 2ca0e86e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4290bf7e2ca0e86e
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4290bf7e2ca0e86e
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4290bf7e2ca0e86e
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4290bf7e2ca0e86e
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7c9d643f1c39664b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7c9d643f1c39664b
added stored data 7e79fc4d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7c9d643f7e79fc4d
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7c9d643f7e79fc4d
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79d804372cb151b4
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79d804372cb151b4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79d804372cb151b4
added stored data 7e3f1e92
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e3f1e922cb151b4
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7c9d643f1c39664b
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e3f1e922cb151b4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e3f1e922cb151b4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e3f1e922cb151b4
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed7e79fc4d
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e3f1e922cb151b4
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e3f1e922cb151b4
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1181939501a96d58
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1181939501a96d58
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1181939501a96d58
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e3f1e922cb151b4
added stored data 0785d3fb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb2cb151b4
upgrading state to 0 and updating tag to 000001


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e3f1e922cb151b4
cache miss, start miss
message router running
starting miss for addr 00000440 core 1


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb2cb151b4
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4290bf7e2ca0e86e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4290bf7e2ca0e86e
added stored data 1b504557
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b5045572ca0e86e
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b5045572ca0e86e
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b5045572ca0e86e
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5257e4522ca0e86e
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5257e4522ca0e86e
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb2cb151b4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb2cb151b4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb2cb151b4
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb2cb151b4
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb2cb151b4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb2cb151b4
added stored data 71366586
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb71366586
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb71366586
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5257e4522ca0e86e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5257e4522ca0e86e
added stored data 037db459
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5257e452037db459
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5257e452037db459
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5257e452037db459
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5257e452037db459
added stored data 584e9aa2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa584e9aa2037db459
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa584e9aa2037db459
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa584e9aa2037db459
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa584e9aa2037db459
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa584e9aa2037db459
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa584e9aa2037db459
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa584e9aa2037db459
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa584e9aa2037db459
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb71366586
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb71366586
added stored data 2b765e51
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb2b765e51
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb2b765e51
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed315e7074
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb2b765e51
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb2b765e51
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb2b765e51
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb2b765e51
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1181939501a96d58
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1181939501a96d58
added stored data 78a6ca1d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d01a96d58
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb2b765e51
added stored data 52c2802a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa52c2802a2b765e51
upgrading state to 0 and updating tag to 000001


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0785d3fb2b765e51
cache miss, start miss
message router running
starting miss for addr 00000044 core 0


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1181939501a96d58
cache miss, start miss
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa584e9aa2037db459
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa584e9aa2037db459
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa584e9aa2037db459
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa584e9aa2037db459
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed315e7074
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed315e7074
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed315e7074
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa584e9aa2037db459
added stored data 45654d88
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45654d88037db459
upgrading state to 0 and updating tag to 000000


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed315e7074
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45654d88037db459
cache hit
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45654d88037db459
cache miss, start miss
message router running
received downgrade for child 1 from state 1 -> 2
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
executing downgrade for incompatible child 0
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d01a96d58
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d01a96d58
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d01a96d58
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa52c2802a2b765e51
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa52c2802a2b765e51
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa52c2802a2b765e51
added stored data 739f0165
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa52c2802a739f0165
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d01a96d58
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45654d88037db459
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45654d88037db459
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45654d88037db459
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d01a96d58
added stored data 60dea232
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d60dea232
upgrading state to 0 and updating tag to 000001


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45654d88037db459
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d60dea232
cache miss, start miss


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45654d88037db459
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
received downgrade for child 1 from state 1 -> 2
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed315e7074
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed315e7074
added stored data 465eb81f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed465eb81f
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed465eb81f
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa52c2802a739f0165
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa52c2802a739f0165
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa52c2802a739f0165
added stored data 60abb6e5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60abb6e5739f0165
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d01a96d58
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60abb6e5739f0165
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60abb6e5739f0165
added stored data 18c09390
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa18c09390739f0165
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed465eb81f
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d60dea232
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d60dea232
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d60dea232
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d60dea232
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d60dea232
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d60dea232
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d60dea232
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa18c09390739f0165
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed465eb81f
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed465eb81f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed465eb81f
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed465eb81f
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed465eb81f
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60abb6e5739f0165
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45654d88037db459
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45654d88037db459
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45654d88037db459
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45654d88037db459
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa18c09390739f0165
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa18c09390739f0165
added stored data 3bf99803
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa18c093903bf99803
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed465eb81f
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa18c093903bf99803
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa18c093903bf99803
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa18c093903bf99803
upgrading state to 1 and updating tag to 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed465eb81f
added stored data 25d9c4ce
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed25d9c4ce
upgrading state to 0 and updating tag to 000000


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d60dea232
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed25d9c4ce
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router sending m->r
router dequeued req, not resp
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d60dea232
added stored data 14e5c248
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d14e5c248
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa18c093903bf99803
cache hit
Store for non-M, need to sendFillReq
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d14e5c248
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d14e5c248
added stored data 418124c3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa418124c314e5c248
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa18c093903bf99803
added stored data 1ba3f17b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa18c093901ba3f17b
upgrading state to 0 and updating tag to 000001


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa18c093903bf99803
cache miss, start miss
message router running
starting miss for addr 00000444 core 1


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78a6ca1d14e5c248
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa18c093901ba3f17b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa18c093901ba3f17b
added stored data 515011ed
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa515011ed1ba3f17b
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa418124c314e5c248
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa418124c314e5c248
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa418124c314e5c248
added stored data 3e975701
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e97570114e5c248
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa18c093901ba3f17b
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e97570114e5c248
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e97570114e5c248
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e97570114e5c248
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa515011ed1ba3f17b
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45654d88037db459
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45654d88037db459
added stored data 159b10f2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa159b10f2037db459
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e97570114e5c248
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa159b10f2037db459
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa159b10f2037db459
added stored data 2852b5c6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2852b5c6037db459
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2852b5c6037db459
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed25d9c4ce
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa061f65ed25d9c4ce
added stored data 2e6eb4f3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2e6eb4f325d9c4ce
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2e6eb4f325d9c4ce
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2e6eb4f325d9c4ce
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa515011ed1ba3f17b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa515011ed1ba3f17b
added stored data 71637a83
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa515011ed71637a83
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa515011ed71637a83
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e97570114e5c248
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e97570114e5c248
added stored data 3b3490ab
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e9757013b3490ab
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa159b10f2037db459
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2852b5c6037db459
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2852b5c6037db459
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2852b5c6037db459
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2852b5c6037db459
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2852b5c6037db459
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2852b5c6037db459
added stored data 2963758c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c037db459
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c037db459
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa515011ed71637a83
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa515011ed71637a83
added stored data 6009e061
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6009e06171637a83
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e97570114e5c248
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6009e06171637a83
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6009e06171637a83
added stored data 5001a7cf
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5001a7cf71637a83
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5001a7cf71637a83
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e9757013b3490ab
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5001a7cf71637a83
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2e6eb4f325d9c4ce
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2e6eb4f325d9c4ce
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2e6eb4f325d9c4ce
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6009e06171637a83
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c037db459
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c037db459
added stored data 09b48190
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c09b48190
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e9757014356a7d2
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c09b48190
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e9757014356a7d2
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c09b48190
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5001a7cf71637a83
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5001a7cf71637a83
added stored data 2edf06d3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d371637a83
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2e6eb4f325d9c4ce
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d371637a83
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d371637a83
added stored data 7c5cd5c3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
upgrading state to 0 and updating tag to 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2e6eb4f325d9c4ce
added stored data 29d6a394
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a39425d9c4ce
upgrading state to 0 and updating tag to 000000


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e9757014356a7d2
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
cache hit


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a39425d9c4ce
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
cache hit


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a39425d9c4ce
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
cache miss, start miss


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d371637a83
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c09b48190
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c09b48190
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c09b48190
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c09b48190
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e9757014356a7d2
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa223a47464356a7d2
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c09b48190
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c09b48190
added stored data 1d224d91
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c1d224d91
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c1d224d91
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c1d224d91
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c1d224d91
added stored data 4f2f168d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c4f2f168d
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4773227a4356a7d2
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c4f2f168d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c4f2f168d
added stored data 0258ddae
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c0258ddae
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c0258ddae
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a39425d9c4ce
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a39425d9c4ce
added stored data 26cbefba
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a39426cbefba
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a39426cbefba
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4773227a4356a7d2
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4773227a4356a7d2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4773227a4356a7d2
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4773227a4356a7d2
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c0258ddae
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c0258ddae
added stored data 47ddbf47
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c47ddbf47
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c47ddbf47
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a39426cbefba
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a39426cbefba
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a39426cbefba
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c4f2f168d
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
cache hit
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a39425d9c4ce
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a39426cbefba
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a39426cbefba
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a39426cbefba
added stored data 5f1c6759
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a3945f1c6759
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a3945f1c6759
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4773227a4356a7d2
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4773227a4356a7d2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4773227a4356a7d2
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4773227a4356a7d2
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c47ddbf47
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c47ddbf47
added stored data 2f441333
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c2f441333
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c2f441333
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a3945f1c6759
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a3945f1c6759
added stored data 708929bc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa708929bc5f1c6759
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
added stored data 2e9c887a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d32e9c887a
upgrading state to 0 and updating tag to 000001


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29d6a3945f1c6759
cache miss, start miss
message router running
starting miss for addr 00000400 core 1


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d32e9c887a
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c2f441333
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c2f441333
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c2f441333
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa708929bc5f1c6759
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa708929bc5f1c6759
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4773227a4356a7d2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4773227a4356a7d2
added stored data 2fa050a0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4773227a2fa050a0
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4773227a2fa050a0
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4773227a2fa050a0
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4773227a2fa050a0
added stored data 2d7c9ad0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4773227a2d7c9ad0
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c2f441333
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4773227a2d7c9ad0
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c2f441333
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa708929bc5f1c6759
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa708929bc5f1c6759
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa708929bc5f1c6759
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2963758c2f441333
added stored data 69d53d05
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69d53d052f441333
upgrading state to 0 and updating tag to 000000


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa708929bc5f1c6759
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69d53d052f441333
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a2d7c9ad0
cache hit
Store for M, so just write data in cache
message router running
received downgrade for child 1 from state 1 -> 2


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7287b1e62f441333
cache miss, start miss
message router running
executing downgrade for incompatible child 0
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a69bed0be
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a69bed0be
added stored data 28a2177b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a28a2177b
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d37c5cd5c3
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d32e9c887a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d32e9c887a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d32e9c887a
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a69bed0be
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d32e9c887a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d32e9c887a
added stored data 798df6b3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d3798df6b3
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a28a2177b
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d3798df6b3
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a28a2177b
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a28a2177b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a28a2177b
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d32e9c887a
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7287b1e62f441333
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7287b1e62f441333
added stored data 1b6823a4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7287b1e61b6823a4
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a28a2177b
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7287b1e61b6823a4
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d3798df6b3
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d3798df6b3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d3798df6b3
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d3798df6b3
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d3798df6b3
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d3798df6b3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d3798df6b3
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d3798df6b3
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7287b1e61b6823a4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7287b1e61b6823a4
added stored data 3ae6bf8f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3ae6bf8f1b6823a4
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a28a2177b
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3ae6bf8f1b6823a4
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3ae6bf8f1b6823a4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3ae6bf8f1b6823a4
added stored data 7b378ea4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3ae6bf8f7b378ea4
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a28a2177b
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3ae6bf8f7b378ea4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3ae6bf8f7b378ea4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3ae6bf8f7b378ea4
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a28a2177b
added stored data 55ea788a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a55ea788a
upgrading state to 0 and updating tag to 000001


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a28a2177b
cache miss, start miss
message router running
starting miss for addr 00000404 core 0


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3ae6bf8f7b378ea4
cache miss, start miss
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a55ea788a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a55ea788a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a55ea788a
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a55ea788a
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d3798df6b3
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2edf06d3798df6b3
added stored data 0230c14a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0230c14a798df6b3
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0230c14a798df6b3
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a55ea788a
cache hit
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a55ea788a
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa708929bc5f1c6759
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa708929bc5f1c6759
added stored data 1af04035
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa708929bc1af04035
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19cccd5a55ea788a
added stored data 2b5dd52e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b5dd52e55ea788a
upgrading state to 0 and updating tag to 000001


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa708929bc1af04035
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0230c14a1216c7bf
cache hit
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b5dd52e55ea788a
cache miss, start miss
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
executing downgrade for incompatible child 1
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 2 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b5dd52e55ea788a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b5dd52e55ea788a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b5dd52e55ea788a
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3ae6bf8f7b378ea4
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa708929bc1af04035
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa708929bc1af04035
added stored data 5b0849f2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f21af04035
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0230c14a1216c7bf
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0230c14a1216c7bf
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0230c14a1216c7bf
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0230c14a1216c7bf
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0230c14a1216c7bf
added stored data 4d229993
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d2299931216c7bf
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b5dd52e55ea788a
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f21af04035
cache hit
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f21af04035
cache hit
Store for M, so just write data in cache
message router running
received downgrade for child 0 from state 1 -> 2


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d2299931216c7bf
cache hit
Store for M, so just write data in cache
message router running
executing downgrade for incompatible child 1


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d22999320102317
cache hit
Store for M, so just write data in cache
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a4a1bf720102317
cache miss, start miss
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
executing downgrade for incompatible child 1
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f2299d1b6f
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f2299d1b6f
added stored data 350a7eb5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f2350a7eb5
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0230c14a1216c7bf
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3ae6bf8f7b378ea4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3ae6bf8f7b378ea4
added stored data 22fea32d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22fea32d7b378ea4
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22fea32d7b378ea4
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a4a1bf720102317
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a4a1bf720102317
added stored data 2547925c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2547925c20102317
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f2350a7eb5
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2547925c20102317
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2547925c20102317
added stored data 63a21aea
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2547925c63a21aea
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2547925c63a21aea
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b5dd52e55ea788a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b5dd52e55ea788a
added stored data 2751fea2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2751fea255ea788a
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2751fea255ea788a
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2751fea255ea788a
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22fea32d7b378ea4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22fea32d7b378ea4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22fea32d7b378ea4
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f2299d1b6f
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f2350a7eb5
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f2350a7eb5
added stored data 33a4d92d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f233a4d92d
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f233a4d92d
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f233a4d92d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f233a4d92d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f233a4d92d
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f233a4d92d
added stored data 4d8589d2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f24d8589d2
upgrading state to 0 and updating tag to 000000


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f233a4d92d
cache miss, start miss
message router running
starting miss for addr 00000404 core 1


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f24d8589d2
cache hit
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2547925c20102317
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2751fea255ea788a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2751fea255ea788a
added stored data 5949fae1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5949fae155ea788a
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22fea32d7b378ea4
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2547925c63a21aea
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2547925c63a21aea
added stored data 42cb14fb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42cb14fb63a21aea
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42cb14fb63a21aea
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42cb14fb63a21aea
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42cb14fb63a21aea
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42cb14fb63a21aea
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5949fae155ea788a
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5949fae155ea788a
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42cb14fb63a21aea
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22fea32d7b378ea4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22fea32d7b378ea4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22fea32d7b378ea4
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa42cb14fb63a21aea
added stored data 1a9ba116
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f24d8589d2
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f2022cac18
cache miss, start miss


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
cache hit
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
cache miss, start miss
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5949fae155ea788a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5949fae155ea788a
added stored data 18bd1f47
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5949fae118bd1f47
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22fea32d7b378ea4
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22fea32d7b378ea4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22fea32d7b378ea4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22fea32d7b378ea4
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22fea32d7b378ea4
added stored data 7c1f2f26
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7c1f2f267b378ea4
upgrading state to 0 and updating tag to 000000


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22fea32d7b378ea4
cache miss, start miss
message router running
starting miss for addr 00000440 core 1


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7c1f2f267b378ea4
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7c1f2f267b378ea4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7c1f2f267b378ea4
added stored data 6114d52d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6114d52d7b378ea4
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6114d52d7b378ea4
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6114d52d7b378ea4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6114d52d7b378ea4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6114d52d7b378ea4
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6114d52d7b378ea4
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5949fae118bd1f47
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5949fae155ea788a
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f2022cac18
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f2022cac18
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f2022cac18
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5949fae118bd1f47
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5949fae118bd1f47
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5949fae118bd1f47
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5949fae118bd1f47
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6114d52d7b378ea4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6114d52d7b378ea4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6114d52d7b378ea4
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5949fae118bd1f47
added stored data 632ca9df
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa632ca9df18bd1f47
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f2022cac18
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router sending m->r
router dequeued req, not resp
received downgrade for child 1 from state 1 -> 2
message router running
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f2022cac18
added stored data 14176921
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f214176921
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6114d52d7b378ea4
cache hit
Store for non-M, need to sendFillReq
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6114d52d7b378ea4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6114d52d7b378ea4
added stored data 78b46043
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460437b378ea4
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa632ca9df18bd1f47
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa632ca9df18bd1f47
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460437b378ea4
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460437b378ea4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460437b378ea4
added stored data 378b7136
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b46043378b7136
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b0849f214176921
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b46043378b7136
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ceb8c7214176921
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ceb8c7200a136be
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b46043378b7136
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b46043378b7136
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b46043378b7136
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa632ca9df18bd1f47
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa632ca9df18bd1f47
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa632ca9df18bd1f47
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa632ca9df18bd1f47
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b46043378b7136
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ceb8c7200a136be
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ceb8c7200a136be
added stored data 2932115d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ceb8c722932115d
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b46043378b7136
cache hit
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ceb8c722932115d
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b46043378b7136
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa632ca9df18bd1f47
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa632ca9df18bd1f47
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b46043378b7136
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b46043378b7136
added stored data 3254aa5c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460433254aa5c
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11663a21aea
added stored data 31d8f321
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11631d8f321
upgrading state to 0 and updating tag to 000001


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa632ca9df18bd1f47
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11631d8f321
cache miss, start miss
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
received downgrade for child 0 from state 1 -> 2
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ceb8c7237bbc3de
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ceb8c7237bbc3de
added stored data 5a314df5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a314df537bbc3de
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460433254aa5c
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460433254aa5c
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460433254aa5c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460433254aa5c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460433254aa5c
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460433254aa5c
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460433254aa5c
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11631d8f321
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11631d8f321
added stored data 32f966d1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11632f966d1
upgrading state to 0 and updating tag to 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460433254aa5c
added stored data 4bdcadbe
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460434bdcadbe
upgrading state to 0 and updating tag to 000000


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a314df537bbc3de
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ceb8c7237bbc3de
cache miss, start miss
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
starting miss for addr 00000004 core 1
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa632ca9df18bd1f47
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa632ca9df18bd1f47
added stored data 77485bcc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77485bcc18bd1f47
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77485bcc18bd1f47
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77485bcc18bd1f47
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a314df537bbc3de
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a314df537bbc3de
added stored data 76a87ec2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec237bbc3de
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460434bdcadbe
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460434bdcadbe
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec237bbc3de
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec237bbc3de
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec237bbc3de
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec237bbc3de
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec237bbc3de
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77485bcc18bd1f47
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77485bcc18bd1f47
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77485bcc18bd1f47
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b46043757465b9
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77485bcc18bd1f47
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77485bcc18bd1f47
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77485bcc18bd1f47
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77485bcc18bd1f47
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11632f966d1
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11632f966d1
added stored data 190a2b89
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba116190a2b89
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba116190a2b89
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec237bbc3de
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec237bbc3de
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec237bbc3de
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba11632f966d1
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b46043757465b9
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b46043757465b9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b46043757465b9
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b46043757465b9
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b46043757465b9
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b46043757465b9
added stored data 5f42dff8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460435f42dff8
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460435f42dff8
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460435f42dff8
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460435f42dff8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460435f42dff8
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77485bcc18bd1f47
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77485bcc18bd1f47
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba116190a2b89
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1a9ba116190a2b89
added stored data 4554cac6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4554cac6190a2b89
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec237bbc3de
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec237bbc3de
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec237bbc3de
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec237bbc3de
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec237bbc3de
added stored data 57cb35f4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec257cb35f4
upgrading state to 0 and updating tag to 000000


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460435f42dff8
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4554cac6190a2b89
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec257cb35f4
cache miss, start miss
message router running
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
message router sending m->r
router dequeued req, not resp
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b460435f42dff8
added stored data 0ae9617a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ae9617a5f42dff8
upgrading state to 0 and updating tag to 000000
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec237bbc3de
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77485bcc18bd1f47
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77485bcc18bd1f47
added stored data 47d59410
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47d5941018bd1f47
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4554cac67febbc16
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47d5941018bd1f47
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47d5941018bd1f47
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47d5941018bd1f47
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47d5941018bd1f47
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47d5941018bd1f47
added stored data 69efad20
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69efad2018bd1f47
upgrading state to 0 and updating tag to 000001


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ae9617a5f42dff8
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa56892d0f7febbc16
cache miss, start miss


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa47d5941018bd1f47
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ae9617a5f42dff8
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ae9617a5f42dff8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ae9617a5f42dff8
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ae9617a5f42dff8
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec257cb35f4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa76a87ec257cb35f4
added stored data 61c1c9ea
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa61c1c9ea57cb35f4
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ae9617a5f42dff8
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa56892d0f7febbc16
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa56892d0f7febbc16
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa56892d0f7febbc16
upgrading state to 1 and updating tag to 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ae9617a5f42dff8
added stored data 12702da8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa12702da85f42dff8
upgrading state to 0 and updating tag to 000000


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69efad2018bd1f47
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa12702da85f42dff8
cache hit
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa61c1c9ea57cb35f4
cache hit
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa12702da85f42dff8
cache hit
message router running
executing downgrade for incompatible child 1


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa12702da85f42dff8
cache hit
Store for M, so just write data in cache
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa61c1c9ea57cb35f4
cache hit
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa61c1c9ea57cb35f4
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa61c1c9ea57cb35f4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa61c1c9ea57cb35f4
added stored data 5b8c4ad0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b8c4ad057cb35f4
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5b8c4ad057cb35f4
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa56892d0f7febbc16
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69efad2018bd1f47
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69efad2018bd1f47
added stored data 3126890e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69efad203126890e
upgrading state to 0 and updating tag to 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa56892d0f7febbc16
added stored data 0860be57
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0860be577febbc16
upgrading state to 0 and updating tag to 000001


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa094423f35f42dff8
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0860be577febbc16
cache miss, start miss


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0395176e5f42dff8
cache hit
Store for M, so just write data in cache
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ebcb9165f42dff8
cache hit
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ebcb9165f42dff8
cache miss, start miss
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
executing downgrade for incompatible child 1
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ebcb9165f42dff8
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ebcb9165f42dff8
added stored data 6a606bc3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc35f42dff8
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc35f42dff8
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc308f91cac
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc308f91cac
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc308f91cac
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69babff757cb35f4
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0860be577febbc16
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0860be577febbc16
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0860be577febbc16
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0860be577febbc16
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69efad203126890e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69efad203126890e
added stored data 0e7a6899
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69efad200e7a6899
upgrading state to 0 and updating tag to 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0860be577febbc16
added stored data 269e3ca0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa269e3ca07febbc16
upgrading state to 0 and updating tag to 000001


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69efad200e7a6899
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc308f91cac
cache miss, start miss


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa269e3ca07febbc16
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa269e3ca07febbc16
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa269e3ca07febbc16
added stored data 1ec95590
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec955907febbc16
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec955907febbc16
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc308f91cac
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc308f91cac
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc308f91cac
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc308f91cac
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc308f91cac
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc308f91cac
added stored data 495f6fe6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc3495f6fe6
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69efad200e7a6899
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69efad200e7a6899
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc3495f6fe6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc3495f6fe6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc3495f6fe6
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69efad203126890e
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69babff757cb35f4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69babff757cb35f4
added stored data 2fd79bc9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2fd79bc957cb35f4
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2fd79bc957cb35f4
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2fd79bc957cb35f4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2fd79bc957cb35f4
added stored data 189e7bf4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc3495f6fe6
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc3495f6fe6
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69efad200e7a6899
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69efad200e7a6899
added stored data 48aeb862
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb8620e7a6899
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb8620e7a6899
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb8620e7a6899
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb8620e7a6899
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec955907febbc16
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec955907febbc16
added stored data 0d87d33c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec955900d87d33c
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc3495f6fe6
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb8620e7a6899
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb8620e7a6899
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb8620e7a6899
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb8620e7a6899
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec955900d87d33c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec955900d87d33c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec955900d87d33c
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb8620e7a6899
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb8620e7a6899
added stored data 26ff83a6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb86226ff83a6
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec955900d87d33c
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb86226ff83a6
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb86226ff83a6
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb86226ff83a6
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb86226ff83a6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb86226ff83a6
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb86226ff83a6
added stored data 607b34e6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb862607b34e6
upgrading state to 0 and updating tag to 000001


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb86226ff83a6
cache miss, start miss
message router running
starting miss for addr 00000404 core 1


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec955900d87d33c
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc3495f6fe6
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc3495f6fe6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc3495f6fe6
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb862607b34e6
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb862607b34e6
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48aeb862607b34e6
added stored data 0820a3fb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0820a3fb607b34e6
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0820a3fb607b34e6
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0820a3fb607b34e6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0820a3fb607b34e6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0820a3fb607b34e6
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc3495f6fe6
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc3495f6fe6
added stored data 384e1b73
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc3384e1b73
upgrading state to 0 and updating tag to 000000


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc3384e1b73
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec955900d87d33c
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec955900d87d33c
added stored data 23bdb942
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa23bdb9420d87d33c
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa23bdb9420d87d33c
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0820a3fb607b34e6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0820a3fb607b34e6
added stored data 2857bc0d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0820a3fb2857bc0d
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0820a3fb2857bc0d
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc3384e1b73
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a606bc3384e1b73
added stored data 0f714d17
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0f714d17384e1b73
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0f714d17384e1b73
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec955900d87d33c
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa23bdb9420d87d33c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa23bdb9420d87d33c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa23bdb9420d87d33c
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0820a3fb607b34e6
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0f714d17384e1b73
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0f714d17384e1b73
added stored data 09ca2604
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0f714d1709ca2604
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0f714d1709ca2604
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0820a3fb2857bc0d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0820a3fb2857bc0d
added stored data 5c91491d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c91491d2857bc0d
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa23bdb9420d87d33c
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c91491d2857bc0d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c91491d2857bc0d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c91491d2857bc0d
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bbc340909ca2604
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bbc340909ca2604
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bbc340909ca2604
added stored data 0473cd8f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0473cd8f09ca2604
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0473cd8f09ca2604
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0473cd8f09ca2604
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0473cd8f09ca2604
added stored data 4a2c5061
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0473cd8f4a2c5061
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0473cd8f4a2c5061
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0473cd8f4a2c5061
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0473cd8f4a2c5061
added stored data 64fe4a12
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64fe4a124a2c5061
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64fe4a124a2c5061
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64fe4a1244b06f01
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c91491d2857bc0d
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa23bdb9420d87d33c
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa23bdb9420d87d33c
added stored data 685f90c7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c70d87d33c
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c91491d2857bc0d
added stored data 018bee71
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c91491d018bee71
upgrading state to 0 and updating tag to 000001


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c91491d2857bc0d
cache miss, start miss
message router running
starting miss for addr 00000400 core 1


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c91491d018bee71
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa189e7bf457cb35f4
added stored data 407aee0d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa407aee0d57cb35f4
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64fe4a1244b06f01
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c91491d018bee71
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c91491d018bee71
added stored data 118e9689
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c91491d118e9689
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c91491d118e9689
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c70d87d33c
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c70d87d33c
added stored data 71234aeb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c771234aeb
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa407aee0d57cb35f4
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa407aee0d57cb35f4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa407aee0d57cb35f4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa407aee0d57cb35f4
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c70d87d33c
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c91491d118e9689
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c91491d118e9689
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c91491d118e9689
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c91491d118e9689
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c771234aeb
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c771234aeb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c771234aeb
upgrading state to 1 and updating tag to 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c91491d118e9689
added stored data 64fae4d4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64fae4d4118e9689
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa407aee0d57cb35f4
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64fae4d4118e9689
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router sending m->r
router dequeued req, not resp
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa407aee0d57cb35f4
added stored data 70e849d4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa407aee0d70e849d4
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c771234aeb
cache hit
Store for non-M, need to sendFillReq
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa407aee0d70e849d4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa407aee0d70e849d4
added stored data 015cd607
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd60770e849d4
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c771234aeb
added stored data 3a383656
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c73a383656
upgrading state to 0 and updating tag to 000001


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c771234aeb
cache miss, start miss
message router running
starting miss for addr 00000444 core 0


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c73a383656
cache miss, start miss
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c73a383656
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c73a383656
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c73a383656
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c73a383656
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64fe4a1244b06f01
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64fe4a1244b06f01
added stored data 70abca7b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa70abca7b44b06f01
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa407aee0d70e849d4
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa70abca7b44b06f01
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa70abca7b44b06f01
added stored data 6155dc2e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6155dc2e44b06f01
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd60770e849d4
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6155dc2e44b06f01
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6155dc2e602bf6f7
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64fae4d4118e9689
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64fae4d4118e9689
added stored data 6f81ec15
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81ec15118e9689
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81ec15118e9689
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa70abca7b44b06f01
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c73a383656
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c73a383656
added stored data 52e0eed2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c752e0eed2
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c752e0eed2
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c752e0eed2
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6155dc2e602bf6f7
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6155dc2e602bf6f7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6155dc2e602bf6f7
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b37ab54118e9689
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6155dc2e602bf6f7
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6155dc2e602bf6f7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6155dc2e602bf6f7
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd6075401c498
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd6075401c498
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd6075401c498
added stored data 24b33dea
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd60724b33dea
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd60724b33dea
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd60724b33dea
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd60724b33dea
added stored data 4def977b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd6074def977b
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd6074def977b
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd6074def977b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd6074def977b
added stored data 5c5953b0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd6075c5953b0
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6155dc2e602bf6f7
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6155dc2e602bf6f7
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6155dc2e602bf6f7
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd6075c5953b0
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd6075c5953b0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd6075c5953b0
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd6075c5953b0
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c752e0eed2
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c752e0eed2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c752e0eed2
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd6075c5953b0
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b37ab54118e9689
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b37ab54118e9689
added stored data 0f3128ee
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b37ab540f3128ee
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b37ab540f3128ee
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b37ab540f3128ee
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b37ab540f3128ee
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b37ab540f3128ee
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c752e0eed2
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd6075c5953b0
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd6075c5953b0
added stored data 28eb91bd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd60728eb91bd
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd60728eb91bd
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015cd60728eb91bd
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6155dc2e602bf6f7
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6155dc2e602bf6f7
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6155dc2e602bf6f7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6155dc2e602bf6f7
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6155dc2e602bf6f7
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c752e0eed2
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c752e0eed2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c752e0eed2
upgrading state to 1 and updating tag to 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6155dc2e602bf6f7
added stored data 5d7a250b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d7a250b602bf6f7
upgrading state to 0 and updating tag to 000000


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c752e0eed2
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d7a250b602bf6f7
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b37ab540f3128ee
cache miss, start miss
message router running
received downgrade for child 0 from state 1 -> 2
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
executing downgrade for incompatible child 1
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d7a250b4517ecc8
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d7a250b4517ecc8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d7a250b4517ecc8
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d7a250b4517ecc8
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d7a250b4517ecc8
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa61fdb2e428eb91bd
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa61fdb2e428eb91bd
added stored data 344e9e11
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa344e9e1128eb91bd
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d7a250b4517ecc8
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c752e0eed2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c752e0eed2
added stored data 5db1edb5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c75db1edb5
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c75db1edb5
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c75db1edb5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c75db1edb5
added stored data 39c1543c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c739c1543c
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa344e9e1128eb91bd
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d7a250b4517ecc8
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d7a250b4517ecc8
added stored data 6d2beaec
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec4517ecc8
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec4517ecc8
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b37ab540f3128ee
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b37ab540f3128ee
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b37ab540f3128ee
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b37ab540f3128ee
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c739c1543c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c739c1543c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c739c1543c
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c739c1543c
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa61fdb2e428eb91bd
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa344e9e1128eb91bd
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa344e9e1128eb91bd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa344e9e1128eb91bd
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa344e9e1128eb91bd
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b37ab540f3128ee
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b37ab540f3128ee
added stored data 0b8425aa
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa0f3128ee
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c739c1543c
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa0f3128ee
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa0f3128ee
added stored data 7fc77743
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa7fc77743
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa7fc77743
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec4517ecc8
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec4517ecc8
added stored data 148984b9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec148984b9
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec148984b9
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec148984b9
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa344e9e1128eb91bd
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa344e9e1128eb91bd
added stored data 5e62d925
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e62d92528eb91bd
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c739c1543c
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c739c1543c
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c739c1543c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c739c1543c
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c739c1543c
added stored data 6fbe4e9e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fbe4e9e39c1543c
upgrading state to 0 and updating tag to 000001


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa685f90c739c1543c
cache miss, start miss
message router running
starting miss for addr 00000040 core 0


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fbe4e9e39c1543c
cache miss, start miss
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec148984b9
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec148984b9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec148984b9
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa0f3128ee
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec148984b9
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec148984b9
added stored data 6b2e4dd9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6b2e4dd9
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e62d92528eb91bd
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec148984b9
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6b2e4dd9
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6b2e4dd9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6b2e4dd9
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6b2e4dd9
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e62d92528eb91bd
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e62d92528eb91bd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e62d92528eb91bd
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e62d92528eb91bd
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fbe4e9e39c1543c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fbe4e9e39c1543c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fbe4e9e39c1543c
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fbe4e9e39c1543c
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e62d92528eb91bd
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e62d92528eb91bd
added stored data 4ccec799
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec79928eb91bd
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec79928eb91bd
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec79928eb91bd
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec79928eb91bd
added stored data 7b03c69a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7997b03c69a
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6b2e4dd9
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fbe4e9e39c1543c
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fbe4e9e39c1543c
added stored data 308ac9ca
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fbe4e9e308ac9ca
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fbe4e9e308ac9ca
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7997b03c69a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7997b03c69a
added stored data 0e82be89
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7990e82be89
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7990e82be89
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6b2e4dd9
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6b2e4dd9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6b2e4dd9
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6b2e4dd9
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fbe4e9e39c1543c
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fbe4e9e308ac9ca
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fbe4e9e308ac9ca
added stored data 28ec4fa4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fbe4e9e28ec4fa4
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7997b03c69a
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6b2e4dd9
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6b2e4dd9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6b2e4dd9
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6b2e4dd9
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7990e82be89
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7990e82be89
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7990e82be89
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7990e82be89
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fbe4e9e28ec4fa4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fbe4e9e28ec4fa4
added stored data 5d8c6d7b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d8c6d7b28ec4fa4
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa3c8f117a
added stored data 59bea843
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa59bea843
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6fbe4e9e28ec4fa4
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa59bea843
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa59bea843
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa59bea843
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa59bea843
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d8c6d7b28ec4fa4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d8c6d7b28ec4fa4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d8c6d7b28ec4fa4
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa59bea843
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7990e82be89
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7990e82be89
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7990e82be89
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa59bea843
added stored data 6d4b7882
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa6d4b7882
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7990e82be89
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa6d4b7882
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d8c6d7b28ec4fa4
cache hit
message router running
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d8c6d7b28ec4fa4
cache miss, start miss
message router running
message router sending m->r
router dequeued req, not resp
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7990e82be89
added stored data 02be5c49
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec79902be5c49
upgrading state to 0 and updating tag to 000000
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d8c6d7b28ec4fa4
cache miss, start miss
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6b2e4dd9
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6b2e4dd9
added stored data 6e3495e0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa6d4b7882
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec79902be5c49
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec79902be5c49
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec79902be5c49
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d8c6d7b28ec4fa4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d8c6d7b28ec4fa4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d8c6d7b28ec4fa4
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec79902be5c49
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d8c6d7b28ec4fa4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d8c6d7b28ec4fa4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d8c6d7b28ec4fa4
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec79902be5c49
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa6d4b7882
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa6d4b7882
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa6d4b7882
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d8c6d7b28ec4fa4
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa6d4b7882
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa6d4b7882
added stored data 19925338
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa199253386d4b7882
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d8c6d7b28ec4fa4
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0b8425aa6d4b7882
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa199253386d4b7882
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b991136d4b7882
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec79902be5c49
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec79902be5c49
added stored data 5c70e56c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7995c70e56c
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7995c70e56c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7995c70e56c
added stored data 7717bc05
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7717bc055c70e56c
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d8c6d7b28ec4fa4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5d8c6d7b28ec4fa4
added stored data 06ff6122
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06ff612228ec4fa4
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06ff612228ec4fa4
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06ff612228ec4fa4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06ff612228ec4fa4
added stored data 2742c730
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2742c73028ec4fa4
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2742c73028ec4fa4
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2742c73028ec4fa4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2742c73028ec4fa4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2742c73028ec4fa4
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ccec7995c70e56c
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2742c73028ec4fa4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2742c73028ec4fa4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2742c73028ec4fa4
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7717bc055c70e56c
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2742c73028ec4fa4
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7717bc055c70e56c
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b991136d4b7882
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b991136d4b7882
added stored data 79c633ad
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b9911379c633ad
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b9911379c633ad
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b9911379c633ad
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b9911379c633ad
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b9911379c633ad
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b9911379c633ad
added stored data 292c5b70
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b99113292c5b70
upgrading state to 0 and updating tag to 000001


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b9911379c633ad
cache miss, start miss
message router running
starting miss for addr 00000004 core 1


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2742c73028ec4fa4
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d2beaec6e3495e0
added stored data 328764ca
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca6e3495e0
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b99113292c5b70
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7717bc055c70e56c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7717bc055c70e56c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7717bc055c70e56c
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7717bc055c70e56c
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7717bc055c70e56c
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7717bc055c70e56c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7717bc055c70e56c
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7717bc055c70e56c
added stored data 3a4d9ff9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7717bc053a4d9ff9
upgrading state to 0 and updating tag to 000000


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7717bc055c70e56c
cache miss, start miss
message router running
starting miss for addr 00000400 core 0


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7717bc053a4d9ff9
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2742c73028ec4fa4
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7717bc0553e19bf1
cache hit
Store for M, so just write data in cache
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2742c73028ec4fa4
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2742c73028ec4fa4
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2742c73028ec4fa4
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b99113292c5b70
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b99113292c5b70
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b99113292c5b70
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca6e3495e0
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca6e3495e0
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca6e3495e0
added stored data 75d12e60
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca75d12e60
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3091352453e19bf1
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2742c73028ec4fa4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2742c73028ec4fa4
added stored data 446c087f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa446c087f28ec4fa4
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa446c087f28ec4fa4
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b99113292c5b70
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b99113292c5b70
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b99113292c5b70
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b99113292c5b70
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca75d12e60
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca75d12e60
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca75d12e60
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca75d12e60
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3091352453e19bf1
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3091352453e19bf1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3091352453e19bf1
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca75d12e60
added stored data 604e123b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca604e123b
upgrading state to 0 and updating tag to 000000


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3091352453e19bf1
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b99113292c5b70
cache hit


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3091352453e19bf1
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca604e123b
cache miss, start miss


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3091352453e19bf1
cache hit
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca75d12e60
cache miss, start miss
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
starting miss for addr 00000040 core 1
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa446c087f28ec4fa4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa446c087f28ec4fa4
added stored data 11bcbc09
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11bcbc0928ec4fa4
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b99113292c5b70
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca604e123b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca604e123b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca604e123b
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3091352453e19bf1
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3091352453e19bf1
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3091352453e19bf1
added stored data 2fb0596a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa309135242fb0596a
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11bcbc0928ec4fa4
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11bcbc0928ec4fa4
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa309135242fb0596a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa309135242fb0596a
added stored data 5068f0fb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5068f0fb2fb0596a
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5068f0fb2fb0596a
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca604e123b
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca604e123b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca604e123b
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa309135242fb0596a
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b99113292c5b70
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa13b99113292c5b70
added stored data 4bb60a1a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a292c5b70
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a292c5b70
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5068f0fb2fb0596a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5068f0fb2fb0596a
added stored data 0d9068a9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5068f0fb0d9068a9
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5068f0fb0d9068a9
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5068f0fb0d9068a9
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5068f0fb0d9068a9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5068f0fb0d9068a9
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca604e123b
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a292c5b70
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a292c5b70
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a292c5b70
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca604e123b
added stored data 1ebadcda
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca1ebadcda
upgrading state to 0 and updating tag to 000000


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a292c5b70
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca604e123b
cache miss, start miss


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5068f0fb0d9068a9
cache hit
message router running
starting miss for addr 00000044 core 0


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa328764ca1ebadcda
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa57eec3d81ebadcda
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
executing downgrade for incompatible child 1
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 2 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa57eec3d81ebadcda
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa57eec3d81ebadcda
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa57eec3d81ebadcda
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a292c5b70
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11bcbc0928ec4fa4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11bcbc0928ec4fa4
added stored data 3e265c16
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e265c1628ec4fa4
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e265c1628ec4fa4
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5068f0fb0d9068a9
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5068f0fb0d9068a9
added stored data 694c6953
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa57eec3d81ebadcda
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa57eec3d81ebadcda
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa57eec3d81ebadcda
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5068f0fb0d9068a9
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a292c5b70
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a292c5b70
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a292c5b70
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a292c5b70
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a292c5b70
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a292c5b70
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a292c5b70
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a292c5b70
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa57eec3d81ebadcda
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa57eec3d81ebadcda
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa57eec3d81ebadcda
added stored data 1f9e2a00
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa57eec3d81f9e2a00
upgrading state to 0 and updating tag to 000000


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
cache miss, start miss


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa57eec3d81ebadcda
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
starting miss for addr 00000044 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a292c5b70
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a292c5b70
added stored data 4217b13e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a4217b13e
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa57eec3d81f9e2a00
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa57eec3d81f9e2a00
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa57eec3d81f9e2a00
added stored data 12db6906
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa12db69061f9e2a00
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa12db69061f9e2a00
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa12db69061f9e2a00
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e265c1628ec4fa4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e265c1628ec4fa4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e265c1628ec4fa4
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a4217b13e
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a4217b13e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4bb60a1a4217b13e
added stored data 68d33f8f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f4217b13e
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f4217b13e
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa12db69067cd294c5
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f4217b13e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f4217b13e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f4217b13e
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e265c1628ec4fa4
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e265c1628ec4fa4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3e265c1628ec4fa4
added stored data 4712a1a5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4712a1a528ec4fa4
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f4217b13e
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f4217b13e
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4712a1a528ec4fa4
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4712a1a53b0d44e5
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa12db69067cd294c5
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa12db69067cd294c5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa12db69067cd294c5
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa12db69067cd294c5
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa12db69067cd294c5
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa12db69067cd294c5
added stored data 3d7b7997
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d7b79977cd294c5
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d7b79977cd294c5
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d7b79977cd294c5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d7b79977cd294c5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d7b79977cd294c5
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d7b79977cd294c5
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4712a1a53b0d44e5
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4712a1a53b0d44e5
added stored data 6bfe5e18
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4712a1a56bfe5e18
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f4217b13e
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4712a1a56bfe5e18
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4712a1a56bfe5e18
added stored data 400ff490
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4712a1a5400ff490
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4712a1a5400ff490
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4712a1a56bfe5e18
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d7b79977cd294c5
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d7b79977cd294c5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d7b79977cd294c5
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f4217b13e
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f4217b13e
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d7b79977cd294c5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d7b79977cd294c5
added stored data 7679969e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d7b79977679969e
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f4217b13e
added stored data 0f890c86
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f0f890c86
upgrading state to 0 and updating tag to 000001


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d7b79977679969e
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d7b79977cd294c5
cache miss, start miss


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
cache hit
message router running
starting miss for addr 00000444 core 0


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
cache hit
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d7b7997560927a3
cache hit
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
cache miss, start miss
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4712a1a5400ff490
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4712a1a5400ff490
added stored data 269932d8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa269932d8400ff490
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f0f890c86
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f0f890c86
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f0f890c86
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f0f890c86
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d7b7997560927a3
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa694c69530d9068a9
added stored data 5ecc2447
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5ecc24470d9068a9
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5ecc24470d9068a9
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa269932d8400ff490
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa269932d8400ff490
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa269932d8400ff490
added stored data 2ec81b2f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2ec81b2f400ff490
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f0f890c86
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d7b7997560927a3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d7b7997560927a3
added stored data 6e3fb151
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e3fb151560927a3
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5ecc24475ff5b90c
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5ecc24475ff5b90c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5ecc24475ff5b90c
added stored data 27541477
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa275414775ff5b90c
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2ec81b2f400ff490
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f0f890c86
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f0f890c86
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f0f890c86
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e3fb151560927a3
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e3fb151560927a3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e3fb151560927a3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e3fb151560927a3
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e3fb151560927a3
added stored data 69b70d86
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86560927a3
upgrading state to 0 and updating tag to 000000


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa275414775ff5b90c
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86560927a3
cache hit
Store for M, so just write data in cache


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60e268e15ff5b90c
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d866b89ef77
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2ec81b2f400ff490
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2ec81b2f400ff490
added stored data 25629d07
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d07400ff490
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f0f890c86
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f0f890c86
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f0f890c86
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f0f890c86
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f0f890c86
added stored data 04dbe486
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f04dbe486
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f0f890c86
cache miss, start miss
message router running
starting miss for addr 00000000 core 1


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d07400ff490
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d866b89ef77
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d866b89ef77
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d866b89ef77
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f04dbe486
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d866b89ef77
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60e268e15ff5b90c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60e268e15ff5b90c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60e268e15ff5b90c
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e3fb151560927a3
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d07400ff490
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d07400ff490
added stored data 771d2a27
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d07771d2a27
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68d33f8f53490448
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f53490448
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d07771d2a27
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d07771d2a27
added stored data 5fb1093b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d075fb1093b
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d075fb1093b
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60e268e15ff5b90c
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60e268e15ff5b90c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60e268e15ff5b90c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60e268e15ff5b90c
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d07771d2a27
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f53490448
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f53490448
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f53490448
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d072904526f
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d072904526f
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d072904526f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d072904526f
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d072904526f
added stored data 2d07b4e7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d072d07b4e7
upgrading state to 0 and updating tag to 000001


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d072904526f
cache miss, start miss
message router running
starting miss for addr 00000040 core 0


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d072d07b4e7
cache miss, start miss
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d866b89ef77
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d866b89ef77
added stored data 40de7625
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d8640de7625
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60e268e15ff5b90c
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60e268e15ff5b90c
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60e268e15ff5b90c
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d8640de7625
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d8640de7625
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d8640de7625
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d8640de7625
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d8640de7625
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d072d07b4e7
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d072d07b4e7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d072d07b4e7
upgrading state to 1 and updating tag to 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d8640de7625
added stored data 456b8337
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86456b8337
upgrading state to 0 and updating tag to 000000


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60e268e15ff5b90c
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f53490448
cache hit
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86456b8337
cache hit
message router running
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86456b8337
cache hit
message router running
message router sending m->r
router dequeued req, not resp


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86456b8337
cache hit
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60e268e15ff5b90c
added stored data 22187834
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa221878345ff5b90c
upgrading state to 0 and updating tag to 000000


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86456b8337
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa221878345ff5b90c
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f53490448
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f53490448
added stored data 37eec622
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f37eec622
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d072d07b4e7
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d072d07b4e7
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25629d072d07b4e7
added stored data 565823d2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa565823d22d07b4e7
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa565823d22d07b4e7
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa565823d22d07b4e7
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa565823d22d07b4e7
added stored data 3c5ddebc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c5ddebc2d07b4e7
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f37eec622
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f37eec622
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c5ddebc2d07b4e7
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c5ddebc2d07b4e7
added stored data 40430eab
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40430eab2d07b4e7
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f53490448
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa221878345ff5b90c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa221878345ff5b90c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa221878345ff5b90c
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c5ddebc2d07b4e7
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f37eec622
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f37eec622
added stored data 6bf95aa6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f6bf95aa6
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40430eab2d07b4e7
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40430eab2d07b4e7
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa40430eab2d07b4e7
added stored data 79b4bc5f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79b4bc5f2d07b4e7
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa221878345ff5b90c
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86456b8337
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86456b8337
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86456b8337
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86456b8337
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f6bf95aa6
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f6bf95aa6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f6bf95aa6
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f6bf95aa6
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79b4bc5f2d07b4e7
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79b4bc5f2d07b4e7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79b4bc5f2d07b4e7
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f6bf95aa6
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f6bf95aa6
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa221878345ff5b90c
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa221878345ff5b90c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa221878345ff5b90c
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79b4bc5f2d07b4e7
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa221878345ff5b90c
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa221878345ff5b90c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa221878345ff5b90c
added stored data 06a4bdc2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc25ff5b90c
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79b4bc5f2d07b4e7
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f6bf95aa6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1635cc5f6bf95aa6
added stored data 0a8b15bf
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf6bf95aa6
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf6bf95aa6
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86456b8337
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86456b8337
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86456b8337
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc25ff5b90c
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc25ff5b90c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc25ff5b90c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc25ff5b90c
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79b4bc5f2d07b4e7
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf6bf95aa6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf6bf95aa6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf6bf95aa6
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf6bf95aa6
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86456b8337
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86456b8337
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86456b8337
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc25ff5b90c
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc25ff5b90c
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc25ff5b90c
added stored data 6f85c9a9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc26f85c9a9
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86456b8337
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc26f85c9a9
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc26f85c9a9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc26f85c9a9
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86456b8337
added stored data 3a4b7ad3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3a4b7ad3456b8337
upgrading state to 0 and updating tag to 000000


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc26f85c9a9
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc26f85c9a9
cache hit
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3a4b7ad3456b8337
cache hit
Store for M, so just write data in cache
message router running
received downgrade for child 0 from state 1 -> 2


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3a4b7ad32380e96d
cache miss, start miss
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf6bf95aa6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf6bf95aa6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf6bf95aa6
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf6bf95aa6
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79b4bc5f2d07b4e7
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa79b4bc5f2d07b4e7
added stored data 2d817bfc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc2d07b4e7
upgrading state to 0 and updating tag to 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf6bf95aa6
added stored data 7ebe2abb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf7ebe2abb
upgrading state to 0 and updating tag to 000001


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc2d07b4e7
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69b70d86456b8337
cache miss, start miss


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc26f85c9a9
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc2d07b4e7
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc2d07b4e7
added stored data 10a0a442
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc10a0a442
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc10a0a442
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf7ebe2abb
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf7ebe2abb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf7ebe2abb
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc2d07b4e7
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3a4b7ad32380e96d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3a4b7ad32380e96d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3a4b7ad32380e96d
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3a4b7ad32380e96d
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc10a0a442
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc10a0a442
added stored data 62f7b00e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc62f7b00e
upgrading state to 0 and updating tag to 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3a4b7ad32380e96d
added stored data 39a3c898
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3a4b7ad339a3c898
upgrading state to 0 and updating tag to 000000


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc62f7b00e
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3a4b7ad339a3c898
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc62f7b00e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc62f7b00e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc62f7b00e
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc62f7b00e
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf7ebe2abb
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3a4b7ad339a3c898
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3a4b7ad339a3c898
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3a4b7ad339a3c898
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3a4b7ad339a3c898
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc26f85c9a9
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc26f85c9a9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc26f85c9a9
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc26f85c9a9
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc62f7b00e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc62f7b00e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc62f7b00e
upgrading state to 1 and updating tag to 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06a4bdc26f85c9a9
added stored data 7705d50d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7705d50d6f85c9a9
upgrading state to 0 and updating tag to 000000


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc62f7b00e
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7705d50d6f85c9a9
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
executing downgrade for incompatible child 0
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc62f7b00e
added stored data 0a271447
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc0a271447
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc0a271447
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16bbb9510a271447
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf7ebe2abb
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf7ebe2abb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf7ebe2abb
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d817bfc62f7b00e
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3a4b7ad339a3c898
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3a4b7ad339a3c898
added stored data 33a11691
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa33a1169139a3c898
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf7ebe2abb
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16bbb9510a271447
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16bbb9510a271447
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16bbb9510a271447
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf7ebe2abb
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7705d50d6f85c9a9
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7705d50d6f85c9a9
added stored data 2c62e2ff
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2c62e2ff6f85c9a9
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf7ebe2abb
added stored data 641117c4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf641117c4
upgrading state to 0 and updating tag to 000001


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2c62e2ff6f85c9a9
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16bbb9510a271447
cache miss, start miss


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa70cdde4c6f85c9a9
cache hit
Store for M, so just write data in cache
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa33a1169139a3c898
cache hit
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa33a1169139a3c898
cache miss, start miss
message router running
received downgrade for child 0 from state 1 -> 2
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
executing downgrade for incompatible child 1
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa33a1169139a3c898
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa33a1169139a3c898
added stored data 3fa46c25
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa33a116913fa46c25
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa33a116913fa46c25
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16bbb9510a271447
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16bbb9510a271447
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16bbb9510a271447
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16bbb9510a271447
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16bbb9510a271447
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16bbb9510a271447
added stored data 765ad5c0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa765ad5c00a271447
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa765ad5c00a271447
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa765ad5c00a271447
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa765ad5c00a271447
added stored data 247929a5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa765ad5c0247929a5
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa70cdde4c3557f5cd
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa765ad5c0247929a5
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a247929a5
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa33a116913fa46c25
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa33a116913fa46c25
added stored data 2900c5ae
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae3fa46c25
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf641117c4
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf641117c4
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae3fa46c25
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae3fa46c25
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae3fa46c25
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae3fa46c25
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae3fa46c25
added stored data 360189d3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae360189d3
upgrading state to 0 and updating tag to 000000


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa70cdde4c4824bae3
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf4a698565
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa70cdde4c4824bae3
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa70cdde4c4824bae3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa70cdde4c4824bae3
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae360189d3
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf4a698565
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf4a698565
added stored data 248c7181
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf248c7181
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae3fa46c25
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a247929a5
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a247929a5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a247929a5
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa70cdde4c4824bae3
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa70cdde4c4824bae3
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a247929a5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a247929a5
added stored data 6c9084e5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a6c9084e5
upgrading state to 0 and updating tag to 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa70cdde4c4824bae3
added stored data 322cf892
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa322cf8924824bae3
upgrading state to 0 and updating tag to 000000


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a6c9084e5
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a247929a5
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae360189d3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae360189d3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae360189d3
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae360189d3
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae360189d3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae360189d3
added stored data 00feedbe
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae00feedbe
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae00feedbe
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae00feedbe
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae00feedbe
added stored data 4aa327af
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae4aa327af
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8b15bf248c7181
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae4aa327af
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48671d96248c7181
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a6c9084e5
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a6c9084e5
added stored data 18fe7f9a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa322cf8924824bae3
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa322cf8924824bae3
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa322cf8924824bae3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa322cf8924824bae3
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa322cf8924824bae3
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48671d96248c7181
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48671d96248c7181
added stored data 244bce61
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48671d96244bce61
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48671d96244bce61
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48671d96244bce61
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48671d96244bce61
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48671d96244bce61
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae4aa327af
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae4aa327af
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae4aa327af
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48671d96244bce61
added stored data 3b0258c3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48671d963b0258c3
upgrading state to 0 and updating tag to 000001


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae4aa327af
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae4aa327af
cache hit
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48671d963b0258c3
cache miss, start miss
message router running
received downgrade for child 0 from state 1 -> 2
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48671d96244bce61
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa322cf8924824bae3
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa322cf8924824bae3
added stored data 4be46fad
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa322cf8924be46fad
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa322cf8924be46fad
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ebea9ba4be46fad
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa462a5e2a4be46fad
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae4aa327af
cache hit
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa462a5e2a4be46fad
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48671d963b0258c3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48671d963b0258c3
added stored data 7b494715
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4947153b0258c3
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4947153b0258c3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4947153b0258c3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4947153b0258c3
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4947153b0258c3
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae4aa327af
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae4aa327af
added stored data 07116ba4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa07116ba44aa327af
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4947153b0258c3
added stored data 5ebaec04
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4947155ebaec04
upgrading state to 0 and updating tag to 000001


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa07116ba44aa327af
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4947155ebaec04
cache miss, start miss
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa462a5e2a4be46fad
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa462a5e2a4be46fad
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa462a5e2a4be46fad
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa462a5e2a4be46fad
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2900c5ae4aa327af
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa07116ba44aa327af
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa07116ba44aa327af
added stored data 58e94f9b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58e94f9b4aa327af
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58e94f9b4aa327af
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58e94f9b4aa327af
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58e94f9b4aa327af
added stored data 484c4f9d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58e94f9b484c4f9d
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58e94f9b484c4f9d
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa462a5e2a4be46fad
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4947155ebaec04
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4947155ebaec04
added stored data 2548556a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4947152548556a
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4947152548556a
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58e94f9b484c4f9d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58e94f9b484c4f9d
added stored data 5ebf060d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5ebf060d484c4f9d
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5ebf060d484c4f9d
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa462a5e2a4be46fad
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa462a5e2a4be46fad
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa462a5e2a4be46fad
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa462a5e2a4be46fad
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4947152548556a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4947152548556a
added stored data 642ea94a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a2548556a
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a2548556a
cache hit
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a2548556a
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58e94f9b484c4f9d
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5ebf060d484c4f9d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5ebf060d484c4f9d
added stored data 4ec3e751
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ec3e751484c4f9d
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ec3e751484c4f9d
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a4a36a2484c4f9d
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4947153b0258c3
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a18fe7f9a
added stored data 7455dd29
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a7455dd29
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a7455dd29
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a2548556a
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a2548556a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a2548556a
added stored data 7ad3f53d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a7ad3f53d
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a4a36a211ae3353
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a7ad3f53d
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a7ad3f53d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a7ad3f53d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a7ad3f53d
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a7ad3f53d
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a7ad3f53d
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a7455dd29
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a7455dd29
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa462a5e2a4be46fad
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa462a5e2a4be46fad
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa462a5e2a4be46fad
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa462a5e2a4be46fad
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa462a5e2a4be46fad
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa462a5e2a4be46fad
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa606b49d711ae3353
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa606b49d711ae3353
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa606b49d711ae3353
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa462a5e2a4be46fad
added stored data 15f72b7c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15f72b7c4be46fad
upgrading state to 0 and updating tag to 000000


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a7ad3f53d
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15f72b7c4be46fad
cache miss, start miss


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa606b49d711ae3353
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
received downgrade for child 1 from state 1 -> 2
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a7ad3f53d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a7ad3f53d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a7ad3f53d
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a7ad3f53d
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a7ad3f53d
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a7455dd29
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a7455dd29
added stored data 36f575ed
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a36f575ed
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a7ad3f53d
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15f72b7c4be46fad
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15f72b7c4be46fad
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15f72b7c4be46fad
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa642ea94a7ad3f53d
added stored data 2611ab06
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2611ab067ad3f53d
upgrading state to 0 and updating tag to 000001


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15f72b7c4be46fad
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a36f575ed
cache miss, start miss
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
received downgrade for child 0 from state 1 -> 2
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2611ab067ad3f53d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2611ab067ad3f53d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2611ab067ad3f53d
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2611ab067ad3f53d
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa606b49d711ae3353
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa606b49d711ae3353
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa606b49d711ae3353
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2611ab067ad3f53d
added stored data 1c44f691
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c44f6917ad3f53d
upgrading state to 0 and updating tag to 000001


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa606b49d711ae3353
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c44f6917ad3f53d
cache hit


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa606b49d711ae3353
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa606b49d711ae3353
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c44f6917ad3f53d
cache hit
Store for M, so just write data in cache
message router running
executing downgrade for incompatible child 0


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa350040127ad3f53d
cache miss, start miss
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa606b49d711ae3353
added stored data 1de0a037
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1de0a03711ae3353
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1de0a03711ae3353
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15f72b7c4be46fad
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15f72b7c4be46fad
added stored data 3dd1f07e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15f72b7c3dd1f07e
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15f72b7c3dd1f07e
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15f72b7c3dd1f07e
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa606b49d711ae3353
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a36f575ed
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a36f575ed
added stored data 3e4e871b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a3e4e871b
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2611ab067ad3f53d
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1de0a03711ae3353
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1de0a03711ae3353
added stored data 7cd7a4db
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cd7a4db11ae3353
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa650f832f3dd1f07e
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa650f832f3dd1f07e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa650f832f3dd1f07e
added stored data 210e542a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa210e542a3dd1f07e
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa210e542a3dd1f07e
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31d74abb3dd1f07e
cache hit
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31d74abb3dd1f07e
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31d74abb05421c50
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa350040127ad3f53d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa350040127ad3f53d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa350040127ad3f53d
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa350040127ad3f53d
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa350040127ad3f53d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa350040127ad3f53d
added stored data 5a531fec
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a531fec7ad3f53d
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a3e4e871b
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c96fd6a3e4e871b
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa798701c93e4e871b
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31d74abb05421c50
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31d74abb05421c50
added stored data 343682d1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31d74abb343682d1
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cd7a4db11ae3353
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cd7a4db11ae3353
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7cd7a4db11ae3353
added stored data 434e84f3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa434e84f311ae3353
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa434e84f311ae3353
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa434e84f311ae3353
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa434e84f311ae3353
added stored data 1f7b988e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa434e84f31f7b988e
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa434e84f31f7b988e
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa798701c93e4e871b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa798701c93e4e871b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa798701c93e4e871b
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa798701c93e4e871b
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa798701c93e4e871b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa798701c93e4e871b
added stored data 015b5b5b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b3e4e871b
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b3e4e871b
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b3e4e871b
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b3e4e871b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b3e4e871b
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a531fec7ad3f53d
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa434e84f31f7b988e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa434e84f31f7b988e
added stored data 39e61fc5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39e61fc51f7b988e
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31d74abb343682d1
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31d74abb343682d1
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31d74abb343682d1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31d74abb343682d1
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31d74abb343682d1
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a531fec7ad3f53d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a531fec7ad3f53d
added stored data 32e12d43
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d437ad3f53d
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d437ad3f53d
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d437ad3f53d
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39e61fc51f7b988e
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d437ad3f53d
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d437ad3f53d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d437ad3f53d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d437ad3f53d
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d437ad3f53d
added stored data 2ce18884
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d432ce18884
upgrading state to 0 and updating tag to 000001


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b3e4e871b
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39e61fc51f7b988e
cache miss, start miss


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b3e4e871b
cache hit
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d437ad3f53d
cache miss, start miss
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000400 core 1
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b3e4e871b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b3e4e871b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b3e4e871b
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b3e4e871b
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d432ce18884
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d432ce18884
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d432ce18884
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d432ce18884
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d432ce18884
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31d74abb343682d1
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31d74abb343682d1
added stored data 6a0ec839
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a0ec839343682d1
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b3e4e871b
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a0ec839343682d1
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a0ec839343682d1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a0ec839343682d1
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b3e4e871b
added stored data 34e575c4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b34e575c4
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a0ec839343682d1
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a0ec839343682d1
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a0ec839343682d1
added stored data 2b47c38e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a0ec8392b47c38e
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b3e4e871b
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a0ec8392b47c38e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a0ec8392b47c38e
added stored data 63e24c21
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c212b47c38e
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b34e575c4
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b34e575c4
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c212b47c38e
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39e61fc51f7b988e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa39e61fc51f7b988e
added stored data 53677070
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa536770701f7b988e
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa536770701f7b988e
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a0ec8392b47c38e
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d432ce18884
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d432ce18884
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d432ce18884
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d432ce18884
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d432ce18884
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d432ce18884
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d432ce18884
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d432ce18884
added stored data 59df310b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
upgrading state to 0 and updating tag to 000001


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa536770701f71deaa
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b34e575c4
cache hit


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa536770701f71deaa
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
cache miss, start miss


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa536770700f20ccb8
cache hit
Store for M, so just write data in cache
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa472a8e010f20ccb8
cache hit
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa472a8e010f20ccb8
cache miss, start miss
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c212b47c38e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c212b47c38e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c212b47c38e
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c212b47c38e
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b34e575c4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b34e575c4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b34e575c4
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b34e575c4
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32e12d432ce18884
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b34e575c4
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c212b47c38e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c212b47c38e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c212b47c38e
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c212b47c38e
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b34e575c4
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c212b47c38e
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c212b47c38e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c212b47c38e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c212b47c38e
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c212b47c38e
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c212b47c38e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c212b47c38e
added stored data 14196ead
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c2114196ead
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b34e575c4
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c2114196ead
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c2114196ead
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63e24c2114196ead
added stored data 598bdd26
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa598bdd2614196ead
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b34e575c4
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b34e575c4
added stored data 26c4fbf0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa26c4fbf034e575c4
upgrading state to 0 and updating tag to 000001


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa015b5b5b34e575c4
cache miss, start miss
message router running
starting miss for addr 00000044 core 1


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa26c4fbf034e575c4
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa472a8e010f20ccb8
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa472a8e010f20ccb8
added stored data 208cce61
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa472a8e01208cce61
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa598bdd2614196ead
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa472a8e01208cce61
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa472a8e01208cce61
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa472a8e01208cce61
added stored data 2bc00542
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bc00542208cce61
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bc00542208cce61
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa26c4fbf034e575c4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa26c4fbf034e575c4
added stored data 50a79ba7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa50a79ba734e575c4
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa598bdd2614196ead
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa598bdd2614196ead
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa50a79ba734e575c4
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa50a79ba734e575c4
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa50a79ba734e575c4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa50a79ba734e575c4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa50a79ba734e575c4
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa50a79ba734e575c4
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa50a79ba734e575c4
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bc00542208cce61
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bc00542208cce61
added stored data 3e08c2bc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bc005423e08c2bc
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa50a79ba734e575c4
added stored data 68dc9297
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68dc929734e575c4
upgrading state to 0 and updating tag to 000001


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bc005423e08c2bc
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa598bdd264228f5b7
cache miss, start miss


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
cache hit
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
cache miss, start miss
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa59df310b2ce18884
added stored data 5a74d00e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a74d00e2ce18884
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bc00542433099fb
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bc005422aa0e5ed
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bc005422aa0e5ed
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a74d00e2ce18884
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa598bdd264228f5b7
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa598bdd264228f5b7
added stored data 1eca3456
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1eca34564228f5b7
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1eca34564228f5b7
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1eca34564228f5b7
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1eca34564228f5b7
added stored data 56810950
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1eca345656810950
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1eca345656810950
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1eca345656810950
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1eca345656810950
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1eca345656810950
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1eca345656810950
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1eca345656810950
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a74d00e2ce18884
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5a74d00e2ce18884
added stored data 2f797dc8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc82ce18884
upgrading state to 0 and updating tag to 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1eca345656810950
added stored data 30e7f38e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
upgrading state to 0 and updating tag to 000000


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc82ce18884
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bc005425e93a00a
cache hit
Store for M, so just write data in cache


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc8040ee2a7
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bc005427e5280ff
cache miss, start miss
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
executing downgrade for incompatible child 0
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc8598bdc89
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc8598bdc89
added stored data 24ef5be0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc824ef5be0
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68dc929734e575c4
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68dc929734e575c4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68dc929734e575c4
added stored data 29b23868
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29b2386834e575c4
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc8598bdc89
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bc005427e5280ff
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bc005427e5280ff
added stored data 3341f00b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3341f00b7e5280ff
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc824ef5be0
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc81cfadac6
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
cache hit
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3341f00b7e5280ff
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3341f00b7e5280ff
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc81cfadac6
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc81cfadac6
added stored data 4b04632c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc84b04632c
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29b2386834e575c4
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29b2386834e575c4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29b2386834e575c4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29b2386834e575c4
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29b2386834e575c4
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29b2386834e575c4
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3341f00b7e5280ff
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3341f00b7e5280ff
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3341f00b7e5280ff
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3341f00b7e5280ff
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3341f00b7e5280ff
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3341f00b7e5280ff
added stored data 400ca591
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3341f00b400ca591
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3341f00b400ca591
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3341f00b400ca591
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3341f00b400ca591
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc84b04632c
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc84b04632c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc84b04632c
added stored data 360a0a14
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc8360a0a14
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc8360a0a14
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc8360a0a14
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc8360a0a14
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc8360a0a14
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc8360a0a14
added stored data 6002c847
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc86002c847
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3341f00b400ca591
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc86002c847
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc86002c847
added stored data 16d6eeb5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc816d6eeb5
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc816d6eeb5
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29b2386834e575c4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29b2386834e575c4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29b2386834e575c4
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc86002c847
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3341f00b400ca591
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
added stored data 25092610
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e25092610
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3341f00b400ca591
added stored data 4a205ffb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4a205ffb400ca591
upgrading state to 0 and updating tag to 000000


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e25092610
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29b2386834e575c4
cache hit
Store for non-M, need to sendFillReq


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4a205ffb400ca591
cache hit
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e56810950
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
message router running
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router sending m->r
router dequeued req, not resp
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa29b2386834e575c4
added stored data 127d8dad
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa127d8dad34e575c4
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e25092610
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc816d6eeb5
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f797dc816d6eeb5
added stored data 4ff57e03
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ff57e0316d6eeb5
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ff57e0316d6eeb5
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ff57e0316d6eeb5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ff57e0316d6eeb5
added stored data 7b4e1790
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4e179016d6eeb5
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4e179016d6eeb5
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa127d8dad34e575c4
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa127d8dad34e575c4
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4e179016d6eeb5
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e25092610
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e25092610
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e25092610
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e25092610
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e25092610
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e25092610
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e25092610
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e25092610
added stored data 471016bc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e471016bc
upgrading state to 0 and updating tag to 000000


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31ee27a334e575c4
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e25092610
cache miss, start miss


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e471016bc
cache hit
message router running
starting miss for addr 00000400 core 0


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e471016bc
cache miss, start miss
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4e179016d6eeb5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4e179016d6eeb5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4e179016d6eeb5
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4e179016d6eeb5
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4e179016d6eeb5
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4e179016d6eeb5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4e179016d6eeb5
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4e179016d6eeb5
added stored data 0e3c20b6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e3c20b616d6eeb5
upgrading state to 0 and updating tag to 000001


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4a205ffb400ca591
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e3c20b616d6eeb5
cache hit
Store for M, so just write data in cache


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b4e179016d6eeb5
cache miss, start miss
message router running
starting miss for addr 00000404 core 1


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb234816d6eeb5
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb234840f6255f
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb234840f6255f
cache miss, start miss
message router running
executing downgrade for incompatible child 0
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 2 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb234840f6255f
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb234840f6255f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb234840f6255f
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb234840f6255f
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4a205ffb1efc6887
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb234840f6255f
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e471016bc
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e471016bc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e471016bc
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31ee27a340d64c22
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e471016bc
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e471016bc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e471016bc
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4a205ffb1efc6887
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4a205ffb1efc6887
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4a205ffb1efc6887
added stored data 43de120c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4a205ffb43de120c
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e471016bc
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4a205ffb43de120c
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31ee27a340d64c22
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31ee27a340d64c22
added stored data 7c1abaa1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31ee27a37c1abaa1
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31ee27a37c1abaa1
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31ee27a37c1abaa1
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31ee27a37c1abaa1
added stored data 4b109c8b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31ee27a34b109c8b
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31ee27a34b109c8b
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e471016bc
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4a205ffb43de120c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4a205ffb43de120c
added stored data 56a93d5b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa56a93d5b43de120c
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e471016bc
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb234840f6255f
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb234840f6255f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb234840f6255f
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31ee27a34b109c8b
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb234840f6255f
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb234840f6255f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb234840f6255f
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb234840f6255f
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa56a93d5b43de120c
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa56a93d5b43de120c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa56a93d5b43de120c
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb234840f6255f
added stored data 6c910437
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb23486c910437
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb234840f6255f
cache miss, start miss
message router running
starting miss for addr 00000000 core 0


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb23486c910437
cache miss, start miss
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e471016bc
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e471016bc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e471016bc
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa56a93d5b43de120c
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e471016bc
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e471016bc
added stored data 074528b8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa074528b8471016bc
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa074528b8471016bc
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa500a07a9471016bc
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31ee27a34b109c8b
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa31ee27a34b109c8b
added stored data 5e542eb4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e542eb44b109c8b
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa30e7f38e471016bc
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb23486c910437
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6abb23486c910437
added stored data 66f160cd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa66f160cd6c910437
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa56a93d5b43de120c
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa500a07a9471016bc
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa500a07a9471016bc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa500a07a9471016bc
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e542eb44b109c8b
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e542eb44b109c8b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e542eb44b109c8b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e542eb44b109c8b
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e542eb44b109c8b
added stored data 202965dd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa202965dd4b109c8b
upgrading state to 0 and updating tag to 000001


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa66f160cd6c910437
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa202965dd4b109c8b
cache miss, start miss


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c76c910437
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa56a93d5b43de120c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa56a93d5b43de120c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa56a93d5b43de120c
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa56a93d5b43de120c
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa500a07a9471016bc
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa500a07a9471016bc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa500a07a9471016bc
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa56a93d5b43de120c
added stored data 226be450
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa226be45043de120c
upgrading state to 0 and updating tag to 000000


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa500a07a9471016bc
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa500a07a9471016bc
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
executing downgrade for incompatible child 0
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa500a07a9471016bc
added stored data 10efdc59
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10efdc59471016bc
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5e542eb44b109c8b
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c76c910437
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c76c910437
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c76c910437
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa226be45043de120c
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c76c910437
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c76c910437
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa202965dd4b109c8b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa202965dd4b109c8b
added stored data 36a1a398
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa36a1a3984b109c8b
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10efdc59471016bc
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10efdc59471016bc
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10efdc59471016bc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10efdc59471016bc
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10efdc59471016bc
added stored data 146afda0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10efdc59146afda0
upgrading state to 0 and updating tag to 000000


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa226be45043de120c
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa226be45043de120c
cache miss, start miss


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10efdc59146afda0
cache hit
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10efdc59146afda0
cache miss, start miss
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa36a1a3984b109c8b
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa36a1a3984b109c8b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa36a1a3984b109c8b
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10efdc59471016bc
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c76c910437
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c76c910437
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c76c910437
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa36a1a3984b109c8b
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10efdc59146afda0
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10efdc59146afda0
added stored data 095f3d5e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa095f3d5e146afda0
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa095f3d5e146afda0
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35b6052a146afda0
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa226be45043de120c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa226be45043de120c
added stored data 2fff84b6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa226be4502fff84b6
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa226be4502fff84b6
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa286933de2fff84b6
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c76c910437
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c76c910437
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c76c910437
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa36a1a3984b109c8b
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa36a1a3984b109c8b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa36a1a3984b109c8b
added stored data 1b79ffa5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b79ffa54b109c8b
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c76c910437
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b79ffa54b109c8b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b79ffa54b109c8b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b79ffa54b109c8b
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c76c910437
added stored data 50b96d34
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c750b96d34
upgrading state to 0 and updating tag to 000001


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b79ffa54b109c8b
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c750b96d34
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
executing downgrade for incompatible child 1
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b79ffa54b109c8b
added stored data 1038a719
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1038a7194b109c8b
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1038a7194b109c8b
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35b6052a146afda0
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35b6052a146afda0
added stored data 789b1483
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa789b1483146afda0
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1b79ffa54b109c8b
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa286933de2fff84b6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa286933de2fff84b6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa286933de2fff84b6
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c76c910437
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa286933de2fff84b6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa286933de2fff84b6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa286933de2fff84b6
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa286933de2fff84b6
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c750b96d34
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c750b96d34
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c750b96d34
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa286933de2fff84b6
added stored data 04cc4b62
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa04cc4b622fff84b6
upgrading state to 0 and updating tag to 000000


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa286933de2fff84b6
cache miss, start miss
message router running
starting miss for addr 00000444 core 0


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa04cc4b622fff84b6
cache hit
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa04cc4b622fff84b6
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1038a7194b109c8b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1038a7194b109c8b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1038a7194b109c8b
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c750b96d34
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1038a7194b109c8b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1038a7194b109c8b
added stored data 5673e9a9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5673e9a94b109c8b
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5673e9a94b109c8b
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa789b1483146afda0
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa789b1483146afda0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa789b1483146afda0
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa789b1483146afda0
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa04cc4b622fff84b6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa04cc4b622fff84b6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa04cc4b622fff84b6
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa789b1483146afda0
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c750b96d34
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c750b96d34
added stored data 0c53fb0b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c70c53fb0b
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1038a7194b109c8b
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c70c53fb0b
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c70c53fb0b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c70c53fb0b
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c70c53fb0b
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5673e9a94b109c8b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5673e9a94b109c8b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5673e9a94b109c8b
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c70c53fb0b
added stored data 4cbc3930
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4cbc39300c53fb0b
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa504a46c70c53fb0b
cache miss, start miss
message router running
starting miss for addr 00000000 core 0


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4cbc39300c53fb0b
cache hit
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa04cc4b622fff84b6
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa04cc4b622fff84b6
cache miss, start miss
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa789b1483146afda0
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa789b1483146afda0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa789b1483146afda0
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa789b1483146afda0
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa789b1483146afda0
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5673e9a94b109c8b
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5673e9a94b109c8b
added stored data 16b610b3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16b610b34b109c8b
upgrading state to 0 and updating tag to 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa789b1483146afda0
added stored data 1887d69c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1887d69c146afda0
upgrading state to 0 and updating tag to 000000


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16b610b34b109c8b
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1887d69c146afda0
cache hit


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa433d92e24b109c8b
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1887d69c146afda0
cache miss, start miss


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3f2f4c984b109c8b
cache hit
Store for M, so just write data in cache
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3f2f4c98316668e0
cache miss, start miss
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4cbc39300c53fb0b
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4cbc39300c53fb0b
added stored data 5513c013
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4cbc39305513c013
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5673e9a94b109c8b
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa04cc4b622fff84b6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa04cc4b622fff84b6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa04cc4b622fff84b6
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa04cc4b622fff84b6
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3f2f4c98316668e0
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3f2f4c98316668e0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3f2f4c98316668e0
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3f2f4c98316668e0
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3f2f4c98316668e0
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3f2f4c98316668e0
added stored data 35583362
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3f2f4c9835583362
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4cbc39300c53fb0b
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa04cc4b622fff84b6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa04cc4b622fff84b6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa04cc4b622fff84b6
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4cbc39305513c013
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4cbc39305513c013
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1887d69c146afda0
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1887d69c146afda0
added stored data 70d40077
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa70d40077146afda0
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3f2f4c9835583362
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa70d40077146afda0
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa70d40077146afda0
added stored data 53ec59eb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa53ec59eb146afda0
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa04cc4b622fff84b6
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa04cc4b622fff84b6
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa04cc4b622fff84b6
added stored data 2bb21dbd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bb21dbd2fff84b6
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa70d40077146afda0
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bb21dbd2fff84b6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bb21dbd2fff84b6
added stored data 6d7bd09e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d7bd09e2fff84b6
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d7bd09e2fff84b6
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa53ec59eb146afda0
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d7bd09e6b44773c
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4cbc39305513c013
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4cbc39305513c013
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4cbc39305513c013
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4cbc39305513c013
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3f2f4c9835583362
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3f2f4c9835583362
added stored data 209c76a7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa209c76a735583362
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa53ec59eb146afda0
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa53ec59eb146afda0
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa53ec59eb146afda0
added stored data 601f5233
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa53ec59eb601f5233
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2bb21dbd2fff84b6
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4cbc39305513c013
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4cbc39305513c013
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4cbc39305513c013
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa209c76a735583362
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa209c76a735583362
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa209c76a735583362
added stored data 5b671f48
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa209c76a75b671f48
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa53ec59eb601f5233
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa209c76a75b671f48
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa209c76a75b671f48
added stored data 7a167515
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675155b671f48
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675155b671f48
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675155b671f48
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4cbc39305513c013
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4cbc39305513c013
added stored data 071d44d4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa071d44d45513c013
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa071d44d45513c013
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa071d44d4091c54ea
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d7bd09e6b44773c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d7bd09e6b44773c
added stored data 69fa6854
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69fa68546b44773c
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4cbc39305513c013
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa53ec59eb601f5233
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa53ec59eb601f5233
added stored data 5c8380b3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c8380b3601f5233
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa209c76a75b671f48
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c8380b3601f5233
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c8380b3601f5233
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c8380b3601f5233
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69fa68546b44773c
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69fa68546b44773c
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69fa68546b44773c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69fa68546b44773c
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69fa68546b44773c
added stored data 39217de4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69fa685439217de4
upgrading state to 0 and updating tag to 000000


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c8380b3601f5233
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c8380b3601f5233
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa071d44d4091c54ea
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa071d44d4091c54ea
added stored data 25cf5160
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa071d44d425cf5160
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69fa685439217de4
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa071d44d425cf5160
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa071d44d425cf5160
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa071d44d425cf5160
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69fa68546b44773c
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675155b671f48
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675155b671f48
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675155b671f48
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa071d44d425cf5160
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675155b671f48
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675155b671f48
added stored data 2a6793ee
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675152a6793ee
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675152a6793ee
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c8380b3601f5233
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c8380b3601f5233
added stored data 7f9ff43f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c8380b37f9ff43f
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675155b671f48
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69fa685439217de4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa69fa685439217de4
added stored data 41d022c9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa41d022c939217de4
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa41d022c939217de4
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa41d022c939217de4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa41d022c939217de4
added stored data 32587310
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3258731039217de4
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c8380b37f9ff43f
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675152a6793ee
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675152a6793ee
added stored data 6119fea8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675156119fea8
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa071d44d425cf5160
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa071d44d425cf5160
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa071d44d425cf5160
added stored data 5620c55d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d25cf5160
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3258731039217de4
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3258731039217de4
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c8380b37f9ff43f
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c8380b37f9ff43f
added stored data 3b08e190
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b08e1907f9ff43f
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b08e1907f9ff43f
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b08e1907f9ff43f
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675156119fea8
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675156119fea8
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675156119fea8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675156119fea8
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675156119fea8
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3258731039217de4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3258731039217de4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3258731039217de4
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a1675156119fea8
added stored data 21f03ba6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba66119fea8
upgrading state to 0 and updating tag to 000001


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3258731039217de4
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba66119fea8
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router sending m->r
router dequeued req, not resp
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3258731039217de4
added stored data 46d57602
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46d5760239217de4
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b08e1907f9ff43f
cache hit
Store for M, so just write data in cache
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46d5760239217de4
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46d5760239217de4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46d5760239217de4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46d5760239217de4
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46d5760239217de4
added stored data 2d03ac2b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
upgrading state to 0 and updating tag to 000000


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa46d5760239217de4
cache miss, start miss
message router running
starting miss for addr 00000440 core 0


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
cache hit
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b08e1902b93dff6
cache hit
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b08e1902b93dff6
cache miss, start miss
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba66119fea8
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba66119fea8
added stored data 47efa4d4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba647efa4d4
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d25cf5160
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d25cf5160
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d25cf5160
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d25cf5160
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d25cf5160
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b08e1902b93dff6
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b08e1902b93dff6
added stored data 00e4507f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00e4507f2b93dff6
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00e4507f2b93dff6
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00e4507f2b93dff6
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00e4507f2b93dff6
added stored data 2f7747cf
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf2b93dff6
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf2b93dff6
cache hit
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf2b93dff6
cache hit
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf2b93dff6
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf2b93dff6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf2b93dff6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf2b93dff6
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf2b93dff6
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d25cf5160
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d25cf5160
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d25cf5160
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d25cf5160
cache hit
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d25cf5160
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d25cf5160
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d25cf5160
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d25cf5160
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba647efa4d4
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf2b93dff6
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf2b93dff6
added stored data 26061183
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf26061183
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf26061183
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d25cf5160
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d25cf5160
added stored data 3bd307d4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d3bd307d4
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba647efa4d4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba647efa4d4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba647efa4d4
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba647efa4d4
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba647efa4d4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba647efa4d4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba647efa4d4
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba647efa4d4
added stored data 52e7b714
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba652e7b714
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d3bd307d4
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba652e7b714
cache hit
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba652e7b714
cache hit
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba652e7b714
cache miss, start miss
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf26061183
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf26061183
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf26061183
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba647efa4d4
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba652e7b714
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa21f03ba652e7b714
added stored data 357be75e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa357be75e52e7b714
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf26061183
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa357be75e52e7b714
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa357be75e52e7b714
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa357be75e52e7b714
upgrading state to 1 and updating tag to 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf26061183
added stored data 3eb21387
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf3eb21387
upgrading state to 0 and updating tag to 000000


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa357be75e52e7b714
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa357be75e52e7b714
cache hit


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa357be75e52e7b714
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa357be75e52e7b714
cache hit


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa357be75e52e7b714
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa357be75e52e7b714
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
executing downgrade for incompatible child 0
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa357be75e52e7b714
added stored data 67c9fcbd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd52e7b714
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd52e7b714
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
added stored data 7469017b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b7469017b
upgrading state to 0 and updating tag to 000000


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b39217de4
cache miss, start miss
message router running
starting miss for addr 00000444 core 1


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2d03ac2b7469017b
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb7469017b
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd52e7b714
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd52e7b714
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd52e7b714
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd52e7b714
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd52e7b714
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd52e7b714
added stored data 41b6d563
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd41b6d563
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d25cf5160
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd41b6d563
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd41b6d563
added stored data 099bf732
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd099bf732
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd099bf732
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d3bd307d4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5620c55d3bd307d4
added stored data 10c8d42a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10c8d42a3bd307d4
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10c8d42a3bd307d4
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb7469017b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb7469017b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb7469017b
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf3eb21387
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf3eb21387
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf3eb21387
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf3eb21387
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf3eb21387
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10c8d42a3bd307d4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10c8d42a3bd307d4
added stored data 73ddbc8e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10c8d42a73ddbc8e
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb7469017b
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10c8d42a73ddbc8e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10c8d42a73ddbc8e
added stored data 43ba2361
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43ba236173ddbc8e
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd41b6d563
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd099bf732
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd099bf732
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd099bf732
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd099bf732
cache hit
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd099bf732
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb7469017b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb7469017b
added stored data 708fc5fd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb708fc5fd
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb708fc5fd
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb708fc5fd
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb708fc5fd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb708fc5fd
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb708fc5fd
added stored data 4aa648d6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb4aa648d6
upgrading state to 0 and updating tag to 000000


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb708fc5fd
cache miss, start miss
message router running
starting miss for addr 00000040 core 1


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb4aa648d6
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd099bf732
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd099bf732
added stored data 1a4bb3b4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd1a4bb3b4
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd1a4bb3b4
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb4aa648d6
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb4aa648d6
added stored data 1bc7a56d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb1bc7a56d
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb1bc7a56d
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb1bc7a56d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa795748bb1bc7a56d
added stored data 7e2252c5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e2252c51bc7a56d
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43ba236173ddbc8e
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43ba236173ddbc8e
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43ba23614e5b6995
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e2252c51bc7a56d
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd1a4bb3b4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67c9fcbd1a4bb3b4
added stored data 519797b4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b41a4bb3b4
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b41a4bb3b4
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b41a4bb3b4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b41a4bb3b4
added stored data 235a3f1f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e2252c51bc7a56d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e2252c51bc7a56d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e2252c51bc7a56d
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e2252c51bc7a56d
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e2252c51bc7a56d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e2252c51bc7a56d
added stored data 64340ed0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64340ed01bc7a56d
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64340ed01bc7a56d
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43ba23615f754c05
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64340ed01bc7a56d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64340ed01bc7a56d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64340ed01bc7a56d
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64340ed01bc7a56d
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64340ed01bc7a56d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64340ed01bc7a56d
added stored data 104c956b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa104c956b1bc7a56d
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa104c956b1bc7a56d
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3dec825e1bc7a56d
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43ba23615f754c05
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43ba23615f754c05
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa10c8d42a73ddbc8e
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf3eb21387
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf3eb21387
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf3eb21387
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf3eb21387
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf3eb21387
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf3eb21387
added stored data 1efe4b4b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf1efe4b4b
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf1efe4b4b
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43ba23615f754c05
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43ba23615f754c05
added stored data 3cbfc28a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43ba23613cbfc28a
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43ba23613cbfc28a
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43ba23613cbfc28a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43ba23613cbfc28a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43ba23613cbfc28a
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43ba23613cbfc28a
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf1efe4b4b
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf1efe4b4b
added stored data 2f8cc841
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf2f8cc841
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa43ba23613cbfc28a
added stored data 45876de6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45876de63cbfc28a
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf2f8cc841
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf3cb25d96
cache miss, start miss


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
received downgrade for child 1 from state 1 -> 2
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45876de63cbfc28a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45876de63cbfc28a
added stored data 6533df6a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45876de66533df6a
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45876de66533df6a
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3dec825e393bd510
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3dec825e393bd510
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3dec825e393bd510
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45876de63cbfc28a
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf3cb25d96
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf3cb25d96
added stored data 08bc18e1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf08bc18e1
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf08bc18e1
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2f7747cf08bc18e1
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3dec825e393bd510
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3dec825e393bd510
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45876de66533df6a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45876de66533df6a
added stored data 60193ca3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60193ca36533df6a
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3dec825e393bd510
added stored data 07b8e066
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3dec825e07b8e066
upgrading state to 0 and updating tag to 000000


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60193ca36533df6a
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3dec825e07b8e066
cache hit
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3684972608bc18e1
cache miss, start miss
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
executing downgrade for incompatible child 0
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3684972608bc18e1
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3684972608bc18e1
added stored data 1fd64ee4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa368497261fd64ee4
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa368497261fd64ee4
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60193ca36533df6a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60193ca36533df6a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60193ca36533df6a
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3dec825e07b8e066
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60193ca36533df6a
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60193ca36533df6a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa60193ca36533df6a
added stored data 6e97fac3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e97fac36533df6a
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3dec825e393bd510
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa368497261fd64ee4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa368497261fd64ee4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa368497261fd64ee4
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa368497261fd64ee4
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3dec825e07b8e066
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3dec825e07b8e066
added stored data 0abb545e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0abb545e07b8e066
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa368497261fd64ee4
added stored data 2ea29587
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa368497262ea29587
upgrading state to 0 and updating tag to 000000


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0abb545e07b8e066
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3dec825e07b8e066
cache miss, start miss


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0abb545e7c90bee8
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0abb545e7c90bee8
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0abb545e7c90bee8
added stored data 492558f3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0abb545e492558f3
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa368497262ea29587
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0abb545e492558f3
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e97fac36533df6a
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa519797b4235a3f1f
added stored data 7a2a67ef
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a2a67ef235a3f1f
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa368497260240f4ad
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0abb545e492558f3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0abb545e492558f3
added stored data 3a898029
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0abb545e3a898029
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e97fac36533df6a
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e97fac36533df6a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e97fac36533df6a
added stored data 7016ea66
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e97fac37016ea66
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a2a67ef235a3f1f
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa368497260240f4ad
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa368497260240f4ad
added stored data 410f8abe
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa36849726410f8abe
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa36849726410f8abe
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0abb545e3a898029
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0abb545e3a898029
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0abb545e3a898029
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e97fac37016ea66
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e97fac37016ea66
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e97fac37016ea66
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e97fac37016ea66
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e97fac37016ea66
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa36849726410f8abe
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa36849726410f8abe
added stored data 3d8cdc51
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d8cdc51410f8abe
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e97fac37016ea66
added stored data 112a6152
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a61527016ea66
upgrading state to 0 and updating tag to 000001


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0abb545e3a898029
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a61527016ea66
cache hit
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0abb545e3a898029
cache hit
message router running
executing downgrade for incompatible child 1


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a61527016ea66
cache hit
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a61527016ea66
cache miss, start miss
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
executing downgrade for incompatible child 1
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0abb545e3a898029
added stored data 78b50443
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b504433a898029
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b504433a898029
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d8cdc51410f8abe
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d8cdc51410f8abe
added stored data 79f6e3b8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d8cdc5179f6e3b8
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d8cdc5179f6e3b8
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0abb545e3a898029
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a2a67ef235a3f1f
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a2a67ef235a3f1f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a2a67ef235a3f1f
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a2a67ef235a3f1f
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d8cdc51410f8abe
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b504433a898029
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b504433a898029
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b504433a898029
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b504433a898029
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ad8c22379f6e3b8
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ad8c22379f6e3b8
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ad8c22379f6e3b8
added stored data 394de4b8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ad8c223394de4b8
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a2a67ef235a3f1f
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a61527016ea66
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a61527016ea66
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a61527016ea66
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a61527016ea66
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b504433a898029
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b504433a898029
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b504433a898029
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a61527016ea66
added stored data 7426d0c6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a61527426d0c6
upgrading state to 0 and updating tag to 000001


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b504433a898029
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b504433a898029
cache miss, start miss
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
received downgrade for child 0 from state 1 -> 2
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a2a67ef235a3f1f
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a2a67ef235a3f1f
added stored data 0e40440d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d235a3f1f
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ad8c223394de4b8
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d235a3f1f
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d235a3f1f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d235a3f1f
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d235a3f1f
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a61527426d0c6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a61527426d0c6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a61527426d0c6
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a61527426d0c6
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d235a3f1f
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b504433a898029
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa78b504433a898029
added stored data 06b5765b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06b5765b3a898029
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d235a3f1f
added stored data 1444d18d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d1444d18d
upgrading state to 0 and updating tag to 000001


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06b5765b3a898029
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d1444d18d
cache miss, start miss


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06b5765b3a898029
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06b5765b3a898029
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06b5765b3a898029
added stored data 0741665a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06b5765b0741665a
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a61527426d0c6
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d1444d18d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d1444d18d
added stored data 36a06e53
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d36a06e53
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a61527426d0c6
added stored data 55f2220a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a615255f2220a
upgrading state to 0 and updating tag to 000001


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d36a06e53
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a615255f2220a
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5ef1a8e055f2220a
cache miss, start miss
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
executing downgrade for incompatible child 0
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06b5765b0741665a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06b5765b0741665a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06b5765b0741665a
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06b5765b0741665a
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa112a61527426d0c6
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ad8c223394de4b8
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ad8c223394de4b8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ad8c223394de4b8
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06b5765b0741665a
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5ef1a8e055f2220a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5ef1a8e055f2220a
added stored data 335564c3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5ef1a8e0335564c3
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06b5765b0741665a
added stored data 1cd0724e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06b5765b1cd0724e
upgrading state to 0 and updating tag to 000000


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06b5765b0741665a
cache miss, start miss
message router running
starting miss for addr 00000044 core 1


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06b5765b1cd0724e
cache hit
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ad8c223394de4b8
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06b5765b1cd0724e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06b5765b1cd0724e
added stored data 72382802
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa723828021cd0724e
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ad8c223394de4b8
added stored data 78e51867
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ad8c22378e51867
upgrading state to 0 and updating tag to 000000


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa723828021cd0724e
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa06b5765b1cd0724e
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d36a06e53
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d36a06e53
added stored data 1974407b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d1974407b
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d1974407b
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d550ad25d
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa723828021cd0724e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa723828021cd0724e
added stored data 25dcd013
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25dcd0131cd0724e
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25dcd0131cd0724e
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25dcd0131cd0724e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25dcd0131cd0724e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25dcd0131cd0724e
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25dcd0131cd0724e
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d550ad25d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0e40440d550ad25d
added stored data 54df7e94
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa54df7e94550ad25d
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa54df7e94550ad25d
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa54df7e94550ad25d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa54df7e94550ad25d
added stored data 64245461
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64245461550ad25d
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5ef1a8e0335564c3
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64245461550ad25d
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa006533f4335564c3
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa006533f4335564c3
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25dcd0131cd0724e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa25dcd0131cd0724e
added stored data 148228ee
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa148228ee1cd0724e
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ad8c22378e51867
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa148228ee1cd0724e
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ad8c22378e51867
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ad8c22378e51867
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ad8c22378e51867
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a550ad25d
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a550ad25d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a550ad25d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a550ad25d
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a550ad25d
added stored data 709a13d1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a709a13d1
upgrading state to 0 and updating tag to 000001


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ad8c22378e51867
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a709a13d1
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
executing downgrade for incompatible child 1
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ad8c22378e51867
added stored data 077b6d77
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa077b6d7778e51867
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a550ad25d
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa148228ee1cd0724e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa148228ee1cd0724e
added stored data 6aaf65de
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa148228ee6aaf65de
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0ad8c22378e51867
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa148228ee6aaf65de
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa148228ee6aaf65de
added stored data 37cc4871
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa148228ee37cc4871
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa148228ee37cc4871
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa077b6d7778e51867
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa077b6d7778e51867
added stored data 424277e0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e078e51867
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa148228ee6aaf65de
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a709a13d1
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a709a13d1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a709a13d1
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a709a13d1
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a709a13d1
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a709a13d1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a709a13d1
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a709a13d1
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a709a13d1
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a709a13d1
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa148228ee37cc4871
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa148228ee37cc4871
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa148228ee37cc4871
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a709a13d1
added stored data 2a45d3a5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a2a45d3a5
upgrading state to 0 and updating tag to 000001


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa148228ee37cc4871
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e078e51867
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router sending m->r
router dequeued req, not resp
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa148228ee37cc4871
added stored data 0c174365
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0c17436537cc4871
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0c17436537cc4871
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec54ff137cc4871
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa006533f4335564c3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa006533f4335564c3
added stored data 6a65626e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa006533f46a65626e
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa006533f46a65626e
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a2a45d3a5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a2a45d3a5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a2a45d3a5
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa077b6d7778e51867
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e078e51867
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e078e51867
added stored data 495d2d18
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e0495d2d18
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e0495d2d18
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e0495d2d18
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e0495d2d18
added stored data 29f37914
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e029f37914
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e029f37914
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa006533f46a65626e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa006533f46a65626e
added stored data 0a807515
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8075156a65626e
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8075156a65626e
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a2a45d3a5
cache hit
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8075156a65626e
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8075156a65626e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8075156a65626e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8075156a65626e
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a2a45d3a5
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e029f37914
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e029f37914
added stored data 0271ffff
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec54ff137cc4871
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec54ff137cc4871
added stored data 19cdda4a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec54ff119cdda4a
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8075156a65626e
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8075156a65626e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8075156a65626e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8075156a65626e
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8075156a65626e
added stored data 4fa909a4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4fa909a46a65626e
upgrading state to 0 and updating tag to 000001


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a8075156a65626e
cache miss, start miss
message router running
starting miss for addr 00000404 core 1


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4fa909a46a65626e
cache hit
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec54ff119cdda4a
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
executing downgrade for incompatible child 0
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4fa909a46a65626e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4fa909a46a65626e
added stored data 4e783e03
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e036a65626e
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a2a45d3a5
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a2a45d3a5
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e036a65626e
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a2a45d3a5
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e036a65626e
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e03721216d9
cache hit
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a2a45d3a5
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a2a45d3a5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a2a45d3a5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a2a45d3a5
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4fa909a46a65626e
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec54ff119cdda4a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec54ff119cdda4a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec54ff119cdda4a
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec54ff119cdda4a
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1ec54ff119cdda4a
added stored data 1f705154
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f70515419cdda4a
upgrading state to 0 and updating tag to 000000


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a2a45d3a5
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e03721216d9
cache miss, start miss
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
received downgrade for child 0 from state 1 -> 2
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f70515419cdda4a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f70515419cdda4a
added stored data 2d36b7d2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f7051542d36b7d2
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f7051542d36b7d2
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a2a45d3a5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa591d884a2a45d3a5
added stored data 71cda635
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa71cda6352a45d3a5
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e03721216d9
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e03721216d9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e03721216d9
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e03721216d9
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e03721216d9
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e03721216d9
added stored data 3a8211bb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e033a8211bb
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e033a8211bb
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e033a8211bb
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e033a8211bb
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e033a8211bb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e033a8211bb
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e033a8211bb
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa71cda6352a45d3a5
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa71cda6352a45d3a5
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
cache hit
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f7051542d36b7d2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f7051542d36b7d2
added stored data 7b12a23d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f7051547b12a23d
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
added stored data 34049485
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e034049485
upgrading state to 0 and updating tag to 000000


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f7051547b12a23d
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f70515419cdda4a
cache miss, start miss
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
starting miss for addr 00000444 core 1
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa71cda6352a45d3a5
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa71cda6352a45d3a5
added stored data 525a18b1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa525a18b12a45d3a5
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e00271ffff
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa525a18b12a45d3a5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa525a18b12a45d3a5
added stored data 0deab5dc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0deab5dc2a45d3a5
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0deab5dc2a45d3a5
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa424277e034049485
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0deab5dc1e20a159
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e033a8211bb
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e033a8211bb
added stored data 4588860b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e034588860b
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e034588860b
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f7051547b12a23d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f7051547b12a23d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f7051547b12a23d
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa200c4aff34049485
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa200c4aff34049485
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa200c4aff34049485
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa200c4aff34049485
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa525a18b12a45d3a5
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e034588860b
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e034588860b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e034588860b
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e034588860b
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f7051547b12a23d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f7051547b12a23d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f7051547b12a23d
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4e783e034588860b
added stored data 734550df
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
upgrading state to 0 and updating tag to 000001


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa200c4aff34049485
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router sending m->r
router dequeued req, not resp
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa200c4aff34049485
added stored data 3d3baa41
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d3baa4134049485
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f7051547b12a23d
cache hit
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f7051547b12a23d
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d3baa4134049485
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d3baa4134049485
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d3baa4134049485
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d3baa4134049485
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d3baa4134049485
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d3baa4134049485
added stored data 783c5dc8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa783c5dc834049485
upgrading state to 0 and updating tag to 000000


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d3baa4134049485
cache miss, start miss
message router running
starting miss for addr 00000400 core 1


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa783c5dc834049485
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f7051547b12a23d
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f7051547b12a23d
added stored data 6f81bd0a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81bd0a7b12a23d
upgrading state to 0 and updating tag to 000000


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81bd0a7b12a23d
cache miss, start miss


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
cache hit
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f7051547b12a23d
cache miss, start miss
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000444 core 1
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0deab5dc1e20a159
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0deab5dc1e20a159
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0deab5dc1e20a159
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0deab5dc1e20a159
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0deab5dc1e20a159
added stored data 11777d27
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d271e20a159
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d271e20a159
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d271e20a159
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa783c5dc834049485
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa783c5dc834049485
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa783c5dc834049485
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0deab5dc1e20a159
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81bd0a7b12a23d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81bd0a7b12a23d
added stored data 7ffa5262
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81bd0a7ffa5262
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81bd0a7ffa5262
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81bd0a7ffa5262
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81bd0a7ffa5262
added stored data 0edbfd8f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81bd0a0edbfd8f
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa783c5dc834049485
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81bd0a0edbfd8f
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81bd0a0edbfd8f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81bd0a0edbfd8f
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa783c5dc834049485
added stored data 43745d77
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa783c5dc843745d77
upgrading state to 0 and updating tag to 000000


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81bd0a0edbfd8f
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa783c5dc843745d77
cache hit
Store for M, so just write data in cache


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81bd0a0edbfd8f
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81bd0a0edbfd8f
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81bd0a0edbfd8f
cache miss, start miss
message router running
executing downgrade for incompatible child 0
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6f81bd0a0edbfd8f
added stored data 4dc23307
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4dc233070edbfd8f
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4dc233070edbfd8f
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d271e20a159
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d271e20a159
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d271e20a159
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa66a2ae9443745d77
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d271e20a159
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d271e20a159
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d271e20a159
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d271e20a159
cache hit
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d271e20a159
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa66a2ae9443745d77
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa66a2ae9443745d77
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa66a2ae9443745d77
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa66a2ae9443745d77
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4dc233070edbfd8f
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4dc233070edbfd8f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4dc233070edbfd8f
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df4588860b
added stored data 02233f62
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df02233f62
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d271e20a159
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df02233f62
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df02233f62
added stored data 7eea4271
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7eea427102233f62
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7eea427102233f62
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4dc233070edbfd8f
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4dc233070edbfd8f
added stored data 016102a4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a40edbfd8f
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa734550df02233f62
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa66a2ae9443745d77
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa66a2ae9443745d77
added stored data 3e3582d4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa66a2ae943e3582d4
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4dc233070edbfd8f
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7eea427102233f62
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7eea427102233f62
added stored data 63758cf0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63758cf002233f62
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63758cf002233f62
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a40edbfd8f
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a40edbfd8f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a40edbfd8f
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a40edbfd8f
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa66a2ae943e3582d4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa66a2ae943e3582d4
added stored data 6e50c8d8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e50c8d83e3582d4
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e50c8d83e3582d4
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d271e20a159
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d271e20a159
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d271e20a159
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa66a2ae943e3582d4
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63758cf002233f62
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63758cf002233f62
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63758cf002233f62
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63758cf002233f62
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63758cf002233f62
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63758cf002233f62
added stored data 5e997de5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63758cf05e997de5
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d271e20a159
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e50c8d83e3582d4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e50c8d83e3582d4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e50c8d83e3582d4
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e50c8d83e3582d4
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a40edbfd8f
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a40edbfd8f
added stored data 763abe6b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a4763abe6b
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63758cf05e997de5
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63758cf05e997de5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63758cf05e997de5
added stored data 32163caf
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63758cf032163caf
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63758cf032163caf
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63758cf0631c21ce
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fa0120d631c21ce
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a40edbfd8f
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e50c8d83e3582d4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6e50c8d83e3582d4
added stored data 3847023b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3847023b3e3582d4
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3847023b3e3582d4
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3d944e6b3e3582d4
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a4763abe6b
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5192773e3582d4
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d271e20a159
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d271e20a159
added stored data 316d9356
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d27316d9356
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fa0120d631c21ce
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fa0120d631c21ce
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fa0120d631c21ce
added stored data 6b62cd9e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fa0120d6b62cd9e
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fa0120d6b62cd9e
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a4763abe6b
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5192773e3582d4
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5192773e3582d4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5192773e3582d4
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5192773e3582d4
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d27316d9356
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d27316d9356
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d27316d9356
upgrading state to 1 and updating tag to 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7a5192773e3582d4
added stored data 58c032ac
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58c032ac3e3582d4
upgrading state to 0 and updating tag to 000000


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0fa0120d6b62cd9e
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d27316d9356
cache miss, start miss


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d27316d9356
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
received downgrade for child 1 from state 1 -> 2
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a4763abe6b
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a4763abe6b
added stored data 43b933fd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a443b933fd
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af97876b62cd9e
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a443b933fd
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a443b933fd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a443b933fd
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58c032ac3e3582d4
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58c032ac3e3582d4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58c032ac3e3582d4
added stored data 2abceeca
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58c032ac2abceeca
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a443b933fd
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af97876b62cd9e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af97876b62cd9e
added stored data 59c6a46c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978759c6a46c
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a443b933fd
added stored data 32746d46
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32746d4643b933fd
upgrading state to 0 and updating tag to 000000


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa016102a443b933fd
cache miss, start miss
message router running
starting miss for addr 00000444 core 1


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32746d4643b933fd
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d27316d9356
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d27316d9356
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d27316d9356
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58c032ac2abceeca
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d27316d9356
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d27316d9356
added stored data 28a1185e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28a1185e316d9356
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978759c6a46c
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28a1185e316d9356
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978759c6a46c
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978759c6a46c
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978759c6a46c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978759c6a46c
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978759c6a46c
added stored data 02ce51e3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978702ce51e3
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978759c6a46c
cache miss, start miss
message router running
starting miss for addr 00000000 core 0


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978702ce51e3
cache miss, start miss
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58c032ac2abceeca
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58c032ac2abceeca
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58c032ac2abceeca
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11777d27316d9356
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58c032ac2abceeca
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58c032ac2abceeca
added stored data 7b666075
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b6660752abceeca
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7b6660752abceeca
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28a1185e316d9356
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28a1185e316d9356
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28a1185e316d9356
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28a1185e316d9356
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa58c032ac2abceeca
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32746d4643b933fd
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32746d4643b933fd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32746d4643b933fd
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32746d4643b933fd
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978702ce51e3
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978702ce51e3
added stored data 780b7f4e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af9787780b7f4e
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28a1185e316d9356
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28a1185e316d9356
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28a1185e316d9356
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28a1185e316d9356
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28a1185e316d9356
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28a1185e316d9356
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28a1185e316d9356
added stored data 690d3f0b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa690d3f0b316d9356
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa62842f942abceeca
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa690d3f0b316d9356
cache hit


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa28a1185e316d9356
cache miss, start miss
message router running
starting miss for addr 00000040 core 1


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa690d3f0b316d9356
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa34b55194316d9356
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af9787780b7f4e
cache miss, start miss
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32746d4643b933fd
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32746d4643b933fd
added stored data 3e9a97b5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32746d463e9a97b5
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa62842f945f680d6e
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa62842f945f680d6e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa62842f945f680d6e
added stored data 12021af6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa62842f9412021af6
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf389316d9356
cache hit
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa62842f9412021af6
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b12021af6
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b12021af6
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af9787780b7f4e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af9787780b7f4e
added stored data 28edcf7e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978728edcf7e
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32746d463e9a97b5
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978728edcf7e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978728edcf7e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978728edcf7e
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978728edcf7e
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978728edcf7e
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf389316d9356
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf389316d9356
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf389316d9356
added stored data 08bbba71
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf38908bbba71
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf38908bbba71
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf38908bbba71
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf38908bbba71
added stored data 176b6585
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf389176b6585
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978728edcf7e
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32746d463e9a97b5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32746d463e9a97b5
added stored data 48fae84b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b3e9a97b5
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b3e9a97b5
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b12021af6
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b12021af6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b12021af6
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf389176b6585
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf389176b6585
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf389176b6585
added stored data 557f651c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf389557f651c
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf389557f651c
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf389557f651c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf389557f651c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf389557f651c
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf389557f651c
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b3e9a97b5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b3e9a97b5
added stored data 42940e12
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b42940e12
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2b4cf389557f651c
added stored data 16715358
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16715358557f651c
upgrading state to 0 and updating tag to 000001


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b42940e12
cache hit
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b12021af6
cache miss, start miss


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978728edcf7e
cache hit
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978728edcf7e
cache hit
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b42940e12
cache miss, start miss
message router running
received downgrade for child 0 from state 1 -> 2
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978728edcf7e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978728edcf7e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978728edcf7e
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978728edcf7e
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16715358557f651c
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16715358557f651c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16715358557f651c
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978728edcf7e
added stored data 0cc112f1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af97870cc112f1
upgrading state to 0 and updating tag to 000001


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af978728edcf7e
cache miss, start miss
message router running
starting miss for addr 00000400 core 1


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16af97870cc112f1
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16715358557f651c
cache hit
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c70b4960cc112f1
cache miss, start miss
message router running
executing downgrade for incompatible child 0
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
downgrade deq from state 2 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c70b4960cc112f1
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c70b4960cc112f1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c70b4960cc112f1
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16715358557f651c
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b12021af6
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b12021af6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b12021af6
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16715358557f651c
added stored data 17ff67f2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1671535817ff67f2
upgrading state to 0 and updating tag to 000001


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b12021af6
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1671535817ff67f2
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router sending m->r
router dequeued req, not resp
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b12021af6
added stored data 322d6124
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b322d6124
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa16715358557f651c
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b42940e12
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b42940e12
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b42940e12
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b42940e12
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1671535817ff67f2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1671535817ff67f2
added stored data 6974a7fb
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6974a7fb17ff67f2
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6974a7fb17ff67f2
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6974a7fb17ff67f2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6974a7fb17ff67f2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6974a7fb17ff67f2
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6974a7fb17ff67f2
added stored data 4ed7af82
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8217ff67f2
upgrading state to 0 and updating tag to 000001


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c70b4960cc112f1
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b322d6124
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c70b4960cc112f1
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5c70b4960cc112f1
added stored data 2512fc80
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2512fc800cc112f1
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8217ff67f2
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b322d6124
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b322d6124
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b322d6124
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b322d6124
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b42940e12
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b42940e12
added stored data 0c2a09e7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b0c2a09e7
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b322d6124
added stored data 36dd84ce
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b36dd84ce
upgrading state to 0 and updating tag to 000000


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2512fc800cc112f1
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6974a7fb17ff67f2
cache miss, start miss
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
starting miss for addr 00000444 core 1
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b36dd84ce
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b36dd84ce
added stored data 007b5c14
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa007b5c1436dd84ce
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa007b5c1436dd84ce
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa007b5c14015db812
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8217ff67f2
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8217ff67f2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8217ff67f2
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8217ff67f2
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2512fc800cc112f1
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2512fc800cc112f1
added stored data 4432789e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4432789e0cc112f1
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4432789e0cc112f1
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b0c2a09e7
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b0c2a09e7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b0c2a09e7
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1bc60f1b36dd84ce
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa007b5c14015db812
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa007b5c14015db812
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa007b5c14015db812
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa007b5c14015db812
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b0c2a09e7
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4432789e0cc112f1
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4432789e0cc112f1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4432789e0cc112f1
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4432789e0cc112f1
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b0c2a09e7
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8217ff67f2
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8217ff67f2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8217ff67f2
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8217ff67f2
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8217ff67f2
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8217ff67f2
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8217ff67f2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8217ff67f2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8217ff67f2
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8217ff67f2
added stored data 7fe56ce7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af827fe56ce7
upgrading state to 0 and updating tag to 000001


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8217ff67f2
cache miss, start miss
message router running
starting miss for addr 00000440 core 1


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa007b5c14015db812
cache hit
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af827fe56ce7
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
executing downgrade for incompatible child 0
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af827fe56ce7
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af827fe56ce7
added stored data 3860ef62
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af823860ef62
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4432789e0cc112f1
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af823860ef62
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8208c83b61
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b0c2a09e7
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa48fae84b0c2a09e7
added stored data 68ccc52d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d0c2a09e7
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa007b5c14015db812
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d0c2a09e7
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d0c2a09e7
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d0c2a09e7
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d0c2a09e7
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4432789e0cc112f1
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8208c83b61
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8208c83b61
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8208c83b61
upgrading state to 1 and updating tag to 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4432789e0cc112f1
added stored data 0dde40a0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0dde40a00cc112f1
upgrading state to 0 and updating tag to 000001


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8208c83b61
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d0c2a09e7
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d0c2a09e7
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d0c2a09e7
added stored data 3562761f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d3562761f
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d3562761f
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d3562761f
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d3562761f
added stored data 5f5e9ed1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d5f5e9ed1
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d5f5e9ed1
cache hit
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d5f5e9ed1
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d2d65e627
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d50a29768
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8208c83b61
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8208c83b61
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8208c83b61
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa007b5c14015db812
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8208c83b61
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8208c83b61
added stored data 6767ffe4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6767ffe408c83b61
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6767ffe408c83b61
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0dde40a00cc112f1
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0dde40a00cc112f1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0dde40a00cc112f1
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4ed7af8208c83b61
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d50a29768
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d50a29768
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d50a29768
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d50a29768
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d50a29768
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa68ccc52d50a29768
added stored data 0aa64f83
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f8350a29768
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f8350a29768
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0dde40a00cc112f1
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6767ffe408c83b61
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6767ffe408c83b61
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6767ffe408c83b61
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0dde40a00cc112f1
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0dde40a00cc112f1
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa007b5c14015db812
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa007b5c14015db812
added stored data 6bc0d7d3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6bc0d7d3015db812
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f837e7ad55f
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6bc0d7d3015db812
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6bc0d7d3015db812
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6bc0d7d3015db812
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6bc0d7d3015db812
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6767ffe408c83b61
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6767ffe408c83b61
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6767ffe408c83b61
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6bc0d7d3015db812
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0dde40a00cc112f1
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0dde40a00cc112f1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0dde40a00cc112f1
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6767ffe408c83b61
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0dde40a00cc112f1
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0dde40a00cc112f1
added stored data 582d8acc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa582d8acc0cc112f1
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6767ffe408c83b61
cache hit
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6767ffe408c83b61
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f837e7ad55f
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f837e7ad55f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f837e7ad55f
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f837e7ad55f
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f837e7ad55f
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f837e7ad55f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f837e7ad55f
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa582d8acc0cc112f1
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6767ffe408c83b61
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6767ffe408c83b61
added stored data 70af3fa9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6767ffe470af3fa9
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6767ffe470af3fa9
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6767ffe4552d15e4
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6bc0d7d3015db812
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6bc0d7d3015db812
added stored data 53e8572e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa53e8572e015db812
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa53e8572e015db812
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f837e7ad55f
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f837e7ad55f
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f837e7ad55f
added stored data 02a1e118
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f8302a1e118
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0dde40a00cc112f1
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f8302a1e118
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f8302a1e118
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f8302a1e118
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f8302a1e118
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3cb57dd2015db812
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3cb57dd2015db812
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3cb57dd2015db812
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3cb57dd2015db812
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6767ffe4552d15e4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6767ffe4552d15e4
added stored data 35dc9bd0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35dc9bd0552d15e4
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3cb57dd2015db812
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa582d8acc0cc112f1
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa582d8acc0cc112f1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa582d8acc0cc112f1
upgrading state to 1 and updating tag to 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3cb57dd2015db812
added stored data 7ae9bde3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ae9bde3015db812
upgrading state to 0 and updating tag to 000000


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa582d8acc0cc112f1
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ae9bde3015db812
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
sending fill req for addr 00000004 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa582d8acc0cc112f1
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa582d8acc0cc112f1
added stored data 4c740780
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa582d8acc4c740780
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35dc9bd0552d15e4
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ae9bde3015db812
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ae9bde3015db812
added stored data 45b5bcbc
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45b5bcbc015db812
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45b5bcbc015db812
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f8302a1e118
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f8302a1e118
added stored data 3322019d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f833322019d
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f833322019d
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f8334eb828a
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa582d8acc4c740780
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa582d8acc4c740780
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa582d8acc4c740780
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa582d8acc4c740780
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35dc9bd0552d15e4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35dc9bd0552d15e4
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35dc9bd0552d15e4
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa582d8acc4c740780
cache hit
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa582d8acc4c740780
cache hit
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35dc9bd0552d15e4
cache hit
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35dc9bd0552d15e4
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45b5bcbc015db812
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45b5bcbc015db812
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45b5bcbc015db812
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35dc9bd0552d15e4
added stored data 3863c88c
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35dc9bd03863c88c
upgrading state to 0 and updating tag to 000001


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f8302a1e118
cache miss, start miss
message router running
starting miss for addr 00000044 core 1


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa582d8acc4c740780
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45b5bcbc015db812
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45b5bcbc015db812
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45b5bcbc015db812
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45b5bcbc015db812
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f8334eb828a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0aa64f8334eb828a
added stored data 4d365b85
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d365b8534eb828a
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45b5bcbc015db812
cache hit
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45b5bcbc015db812
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa582d8acc4c740780
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa582d8acc4c740780
added stored data 7ea81ae3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae34c740780
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35dc9bd03863c88c
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae34c740780
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae34c740780
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae34c740780
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d365b8534eb828a
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d365b8534eb828a
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d365b8534eb828a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d365b8534eb828a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d365b8534eb828a
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae34c740780
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35dc9bd03863c88c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35dc9bd03863c88c
added stored data 6d05b538
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d05b5383863c88c
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6d05b5383863c88c
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa158b4cbe3863c88c
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae34c740780
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa67fa53ac3863c88c
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae34c740780
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45b5bcbc015db812
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa45b5bcbc015db812
added stored data 17dc0970
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc0970015db812
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae34c740780
added stored data 448d16a2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae3448d16a2
upgrading state to 0 and updating tag to 000001


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc0970015db812
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a44617d3863c88c
cache hit
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae3448d16a2
cache miss, start miss
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
executing downgrade for incompatible child 1
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae3448d16a2
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae3448d16a2
added stored data 3b5241b5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae33b5241b5
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae33b5241b5
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc0970015db812
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc0970015db812
added stored data 621f6460
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc0970621f6460
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a44617d3863c88c
cache hit
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a44617d3863c88c
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc0970621f6460
cache miss, start miss
message router running
starting miss for addr 00000404 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc0970621f6460
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc0970621f6460
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc0970621f6460
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d365b8534eb828a
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae33b5241b5
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae33b5241b5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae33b5241b5
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae33b5241b5
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a44617d0853f3c2
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a44617d0853f3c2
added stored data 52428688
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880853f3c2
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc0970621f6460
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc0970621f6460
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc0970621f6460
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc0970621f6460
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc0970621f6460
added stored data 68785a13
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc097068785a13
upgrading state to 0 and updating tag to 000000


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc0970621f6460
cache miss, start miss
message router running
starting miss for addr 00000400 core 1


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc097068785a13
cache hit
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880853f3c2
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae33b5241b5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae33b5241b5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae33b5241b5
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae33b5241b5
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d365b8534eb828a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d365b8534eb828a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d365b8534eb828a
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7ea81ae33b5241b5
added stored data 4c374fa3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c374fa33b5241b5
upgrading state to 0 and updating tag to 000001


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d365b8534eb828a
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c374fa33b5241b5
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router sending m->r
router dequeued req, not resp
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4d365b8534eb828a
added stored data 5718e899
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5718e89934eb828a
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc097068785a13
cache miss, start miss
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
executing downgrade for incompatible child 0
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
downgrade deq from state 2 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
downgrade deq from state 2 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 2 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc097068785a13
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc097068785a13
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc097068785a13
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a44617d0853f3c2
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c374fa33b5241b5
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c374fa33b5241b5
added stored data 6b0f13f0
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c374fa36b0f13f0
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5718e89934eb828a
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5718e89934eb828a
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5718e89934eb828a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5718e89934eb828a
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5718e89934eb828a
added stored data 01577af5
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5718e89901577af5
upgrading state to 0 and updating tag to 000000


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5718e89934eb828a
cache miss, start miss
message router running
starting miss for addr 00000440 core 1


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c374fa36b0f13f0
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
sending fill req for addr 00000440 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc097068785a13
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc097068785a13
added stored data 6861d92f
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f68785a13
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f68785a13
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880853f3c2
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880853f3c2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880853f3c2
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880853f3c2
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c374fa36b0f13f0
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4c374fa36b0f13f0
added stored data 65689c1e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa65689c1e6b0f13f0
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5718e89901577af5
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5718e89901577af5
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5718e89901577af5
added stored data 3b8dd6f3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b8dd6f301577af5
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa17dc097068785a13
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b8dd6f301577af5
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b8dd6f301577af5
added stored data 1e46cd36
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b8dd6f31e46cd36
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b8dd6f31e46cd36
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b8dd6f3100928c3
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f68785a13
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f68785a13
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f68785a13
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b8dd6f301577af5
cache miss, start miss
message router running
starting miss for addr 00000044 core 1
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880853f3c2
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880853f3c2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880853f3c2
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880853f3c2
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b8dd6f3100928c3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3b8dd6f3100928c3
added stored data 38e21ee6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee6100928c3
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee6100928c3
cache miss, start miss
message router running
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee6100928c3
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee6100928c3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee6100928c3
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa65689c1e6b0f13f0
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee6100928c3
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880853f3c2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880853f3c2
added stored data 3e2b44d2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286883e2b44d2
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f68785a13
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286883e2b44d2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286883e2b44d2
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286883e2b44d2
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa65689c1e3b4ee77c
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa65689c1e3b4ee77c
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa65689c1e3b4ee77c
added stored data 7cf0703e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa65689c1e7cf0703e
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286883e2b44d2
cache hit
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286883e2b44d2
cache hit
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa65689c1e7cf0703e
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f68785a13
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f68785a13
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f68785a13
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286883e2b44d2
cache miss, start miss
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f68785a13
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f68785a13
added stored data 1a62a257
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f1a62a257
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286883e2b44d2
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee6100928c3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee6100928c3
added stored data 676c9eb9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee6676c9eb9
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f68785a13
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee6676c9eb9
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee6676c9eb9
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee6676c9eb9
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee6676c9eb9
cache hit
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f1a62a257
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f1a62a257
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f1a62a257
added stored data 77a83a13
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee6676c9eb9
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa65689c1e7cf0703e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa65689c1e7cf0703e
added stored data 19d07d33
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19d07d337cf0703e
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee6676c9eb9
added stored data 76a5820a
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee676a5820a
upgrading state to 0 and updating tag to 000000


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee6676c9eb9
cache miss, start miss
message router running
starting miss for addr 00000040 core 0


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
cache hit
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
St, so req to updgrade itself to M


requesting addr 00000044 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee676a5820a
cache hit
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
cache hit
message router running
executing downgrade for incompatible child 1


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee676a5820a
cache miss, start miss
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
starting miss for addr 00000440 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee676a5820a
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee676a5820a
added stored data 1cee75a1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee61cee75a1
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19d07d337cf0703e
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000444 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee61cee75a1
cache miss, start miss
message router running
starting miss for addr 00000444 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286883e2b44d2
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286883e2b44d2
added stored data 0e6e4d7d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880e6e4d7d
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000440 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000440, to state 1
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000440 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880e6e4d7d
cache hit
message router running


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
cache miss, start miss
message router running
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880e6e4d7d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880e6e4d7d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880e6e4d7d
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19d07d334f3d55ae
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19d07d334f3d55ae
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19d07d334f3d55ae
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19d07d334f3d55ae
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000404 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19d07d334f3d55ae
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
upgrading state to 1 and updating tag to 000000
message router running
getting fill resp for addr 00000400, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19d07d334f3d55ae
added stored data 77356735
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa773567354f3d55ae
upgrading state to 0 and updating tag to 000001


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa773567354f3d55ae
cache hit
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880e6e4d7d
cache hit
message router running
received downgrade for child 0 from state 1 -> 2


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880e6e4d7d
cache hit
Store for non-M, need to sendFillReq
message router running
executing downgrade for incompatible child 1
sending fill req for addr 00000440 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa773567354f3d55ae
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa773567354f3d55ae
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa773567354f3d55ae
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000440 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000440, to state 2
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000440 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880e6e4d7d
added stored data 58ddb69b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5242868858ddb69b
upgrading state to 0 and updating tag to 000001


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa773567354f3d55ae
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
St, so req to updgrade itself to M


requesting addr 00000440 (core 1)
tag 000001 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5242868858ddb69b
cache hit
Store for M, so just write data in cache
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5242868862ee4e19
cache miss, start miss
message router running
executing downgrade for incompatible child 1
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa773567354f3d55ae
added stored data 7e9a1efd
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd4f3d55ae
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa524286880e6e4d7d
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee61cee75a1
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee61cee75a1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee61cee75a1
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee61cee75a1
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee61cee75a1
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa38e21ee61cee75a1
added stored data 001936d8
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d81cee75a1
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d81cee75a1
cache miss, start miss
message router running
starting miss for addr 00000440 core 0
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5242868862ee4e19
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5242868862ee4e19
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5242868862ee4e19
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5242868862ee4e19
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5242868862ee4e19
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5242868862ee4e19
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5242868862ee4e19
upgrading state to 1 and updating tag to 000001
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd4f3d55ae
cache miss, start miss
message router running
starting miss for addr 00000000 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d81cee75a1
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d81cee75a1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d81cee75a1
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d81cee75a1
cache hit
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa773567354f3d55ae
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
upgrading state to 1 and updating tag to 000000
message router running


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
added stored data 6f811dc1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f6f811dc1
upgrading state to 0 and updating tag to 000000


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f77a83a13
cache miss, start miss
message router running
starting miss for addr 00000400 core 1


requesting addr 00000000 (core 0)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f6f811dc1
cache hit
Store for M, so just write data in cache
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
St, so req to updgrade itself to M


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f463957e4
cache miss, start miss
message router running
starting miss for addr 00000400 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd4f3d55ae
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd4f3d55ae
added stored data 568594ee
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd568594ee
upgrading state to 0 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd568594ee
cache miss, start miss
message router running
starting miss for addr 00000000 core 1
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd568594ee
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd568594ee
added stored data 737a15d3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd737a15d3
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000440 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5242868862ee4e19
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000440 (aligned to 00000440), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f463957e4
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
message router running
message router sending m->r
router dequeued req, not resp
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f463957e4
added stored data 4ab0bf7d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f4ab0bf7d
upgrading state to 0 and updating tag to 000000
message router running
getting fill resp for addr 00000440, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5242868862ee4e19
added stored data 32c25bc6
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5242868832c25bc6
upgrading state to 0 and updating tag to 000001


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d81cee75a1
cache hit
message router running


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5242868832c25bc6
cache miss, start miss


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d81cee75a1
cache hit
Store for non-M, need to sendFillReq
message router running
starting miss for addr 00000040 core 0
something in cache, need to writeback bc different tag (addr 00000440)
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d81cee75a1
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d81cee75a1
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d81cee75a1
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d81cee75a1
added stored data 2e399a7e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d82e399a7e
upgrading state to 0 and updating tag to 000000


requesting addr 00000040 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d81cee75a1
cache miss, start miss
message router running
starting miss for addr 00000040 core 0


requesting addr 00000400 (core 1)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f4ab0bf7d
cache miss, start miss
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 0
Load, so req to updgrade itself to S
starting miss for addr 00000400 core 1
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 1
Load, so req to updgrade itself to S
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 0 to 1, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 1
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d82e399a7e
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d82e399a7e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d82e399a7e
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000400 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000400, to state 1
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000400 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000400 (core 0)
tag 000001 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd737a15d3
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000400 (aligned to 00000400), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd737a15d3
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000400, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd737a15d3
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd737a15d3
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000400 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000400, to state 2
ppp executing req because all children compatible (addr 00000400)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000001 -> 000001
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000400 (i 0), core 1
no need to downgrade
message router running
getting fill resp for addr 00000400, core 0
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd737a15d3
added stored data 28ca7813
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd28ca7813
upgrading state to 0 and updating tag to 000001


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000001
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd737a15d3
cache miss, start miss
message router running
starting miss for addr 00000004 core 1


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d82e399a7e
cache hit
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd28ca7813
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000001 -> 000000
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f4ab0bf7d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f4ab0bf7d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f4ab0bf7d
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 1
no need to downgrade
message router running


requesting addr 00000444 (core 1)
tag 000001 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d82e399a7e
cache miss, start miss
message router running
starting miss for addr 00000444 core 1
something in cache, need to writeback bc different tag (addr 00000040)
message router running
sending fill req for addr 00000444 (aligned to 00000440), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f4ab0bf7d
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000440)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f4ab0bf7d
added stored data 6a978068
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a9780684ab0bf7d
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000404 (core 0)
tag 000001 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a9780684ab0bf7d
cache miss, start miss
message router running
starting miss for addr 00000404 core 0
something in cache, need to writeback bc different tag (addr 00000000)
message router running
sending fill req for addr 00000404 (aligned to 00000400), core 0
Load, so req to updgrade itself to S
message router running
received downgrade for child 0 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5242868832c25bc6
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000400)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x400, ddr3Req.address = 0x10, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000001
message router running
getting fill resp for addr 00000440, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5242868832c25bc6
added stored data 7e49aa1b
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e49aa1b32c25bc6
upgrading state to 0 and updating tag to 000001
message router running


requesting addr 00000040 (core 1)
tag 000000 vs current tag 000001
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e49aa1b32c25bc6
cache miss, start miss
message router running
starting miss for addr 00000040 core 1
something in cache, need to writeback bc different tag (addr 00000440)
message router running
sending fill req for addr 00000040 (aligned to 00000040), core 1
St, so req to updgrade itself to M
message router running
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x440, ddr3Req.address = 0x11, ddr3Req.byteen = 0xffffffffffffffff
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd28ca7813
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000400, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd28ca7813
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd28ca7813
upgrading state to 1 and updating tag to 000001
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000040 (i 1), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 0
no need to downgrade
message router running


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000001
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7e9a1efd28ca7813
cache miss, start miss
message router running
starting miss for addr 00000004 core 0
something in cache, need to writeback bc different tag (addr 00000400)
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M
message router running
received downgrade for child 0 from state 1 -> 2
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d82e399a7e
message router running
message router sending m->r
router dequeued req, not resp
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000001 -> 000000
message router running
getting fill resp for addr 00000040, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d82e399a7e
added stored data 09e76065
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d809e76065
upgrading state to 0 and updating tag to 000000
message router running


requesting addr 00000004 (core 1)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6861d92f4ab0bf7d
cache miss, start miss
message router running
starting miss for addr 00000004 core 1
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 1
Load, so req to updgrade itself to S
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a9780684ab0bf7d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
getting fill resp for addr 00000000, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a9780684ab0bf7d
added stored data 15161a4e
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15161a4e4ab0bf7d
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 0 to 1, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
executing downgrade for incompatible child 0
received downgrade for child 0 from state 0 -> 1
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 1
ppp executing req because all children compatible (addr 00000000)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x0, ddr3Req.address = 0x0, ddr3Req.byteen = 0x0
updating state 2 -> 1
updating tag 000000 -> 000000
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running
downgrade deq from state 1 to 1, addr 00000000 (i 0), core 0
no need to downgrade
message router running


requesting addr 00000044 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d82e399a7e
cache miss, start miss
message router running
starting miss for addr 00000044 core 0
message router running
sending fill req for addr 00000044 (aligned to 00000040), core 0
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15161a4e4ab0bf7d
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
getting fill resp for addr 00000000, core 1
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15161a4e4ab0bf7d
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15161a4e4ab0bf7d
upgrading state to 1 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 0 to 2, addr 00000040 (i 1), core 1
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
executing downgrade for incompatible child 1
received downgrade for child 1 from state 0 -> 2
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0xffffffffffffffff
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 1, address 00000040, to state 2
ppp executing req because all children compatible (addr 00000040)
current state is I so need to read data from mem
mkWideMemFromDDR3::req : wideMemReq.addr = 0x40, ddr3Req.address = 0x1, ddr3Req.byteen = 0x0
updating state 2 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running
downgrade deq from state 2 to 2, addr 00000040 (i 1), core 1
no need to downgrade
message router running


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 1
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15161a4e4ab0bf7d
cache hit
Store for non-M, need to sendFillReq
message router running
sending fill req for addr 00000000 (aligned to 00000000), core 1
St, so req to updgrade itself to M
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
message router running
ppp responding after querying memory
mkWideMemFromDDR3::resp : data = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d809e76065
message router running
message router sending m->r
router dequeued req, not resp
executing downgrade for incompatible child 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
getting fill resp for addr 00000040, core 0
data gotten (from mem? 1) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa001936d809e76065
added stored data 3a623910
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3a62391009e76065
upgrading state to 0 and updating tag to 000000
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 1 to 2, addr 00000000 (i 0), core 0
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
executing downgrade for incompatible child 0
received downgrade for child 0 from state 1 -> 2
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
ROUTER: dequeued req to 0, address 00000000, to state 2
ppp executing req because all children compatible (addr 00000000)
current state is M/S, so just updating state
updating state 1 -> 0
updating tag 000000 -> 000000
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
message router sending m->r
router dequeued req, not resp
downgrade deq from state 2 to 2, addr 00000000 (i 0), core 0
no need to downgrade
message router running
getting fill resp for addr 00000000, core 1
data gotten (from mem? 0) was aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15161a4e4ab0bf7d
added stored data 52816199
new cache line data is aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15161a4e52816199
upgrading state to 0 and updating tag to 000000


requesting addr 00000004 (core 0)
tag 000000 vs current tag 000000
current state there: 2
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15161a4e4ab0bf7d
cache miss, start miss
message router running
starting miss for addr 00000004 core 0


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15161a4e52816199
cache hit
message router running
sending fill req for addr 00000004 (aligned to 00000000), core 0
St, so req to updgrade itself to M


requesting addr 00000000 (core 1)
tag 000000 vs current tag 000000
current state there: 0
current cache there: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa15161a4e52816199
cache hit
message router running
